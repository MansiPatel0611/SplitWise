{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/Model.ts","webpack:///./src/app/Services/BillService.ts","webpack:///./src/app/Services/FriendService.ts","webpack:///./src/app/Services/GroupService.ts","webpack:///./src/app/Services/HubService.ts","webpack:///./src/app/Services/UserService.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board.component.css","webpack:///./src/app/board/board.component.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/create-group/create-group.component.css","webpack:///./src/app/create-group/create-group.component.html","webpack:///./src/app/create-group/create-group.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/expense/expense.component.css","webpack:///./src/app/expense/expense.component.html","webpack:///./src/app/expense/expense.component.ts","webpack:///./src/app/friend-board/friend-board.component.css","webpack:///./src/app/friend-board/friend-board.component.html","webpack:///./src/app/friend-board/friend-board.component.ts","webpack:///./src/app/group-board/group-board.component.css","webpack:///./src/app/group-board/group-board.component.html","webpack:///./src/app/group-board/group-board.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routing-module.module.ts","webpack:///./src/app/user-setting/user-setting.component.css","webpack:///./src/app/user-setting/user-setting.component.html","webpack:///./src/app/user-setting/user-setting.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class User {\r\n  constructor() {\r\n  }\r\n  public userid;\r\n  public user_name: string;\r\n  public email_id: string;\r\n  public phone_no: string;\r\n  public password: string;\r\n}\r\nexport class FriendResponse {\r\n  constructor() { }\r\n  public userid;\r\n  public user_name: string;\r\n  public email_id: string\r\n  public phone_no: string;\r\n}\r\nexport class Group {\r\n  constructor() { }\r\n  public groupid;\r\n  public group_name: string;\r\n  public group_created_by: number;\r\n  public is_simplified_depts: boolean;\r\n}\r\nexport class CreateGroupResponse {\r\n  constructor() { }\r\n  public groupid;\r\n  public group_name: string;\r\n  public group_created_by;\r\n  public is_simplified_depts: boolean;\r\n  public groupMembers: GroupMember[];\r\n}\r\nexport class GroupResponse {\r\n  constructor() { }\r\n  public groupid;\r\n  public group_name: string;\r\n  public group_created_by: Detail;\r\n  public is_simplified_depts: boolean;\r\n  public memberLists:Detail[];\r\n}\r\nexport class CommonResponse {\r\n  constructor() { }\r\n  public id;\r\n  public status: boolean;\r\n}\r\nexport class GroupMember {\r\n  constructor() { }\r\n  public userid;\r\n  public groupid;\r\n}\r\nexport class Detail {\r\n  constructor() { }\r\n  public id;\r\n  public name: string;\r\n}\r\nexport class Bill {\r\n  constructor() { }\r\n  public billid;\r\n  public description: string;\r\n  public total_amount: number;\r\n  public bill_created_byId: number;\r\n  public bill_updated_byId: number;\r\n  public bill_date: Date;\r\n  public bill_created_at: Date;\r\n  public bill_updated_at: Date;\r\n  public groupId: number;\r\n}\r\nexport class BillResponse {\r\n  constructor() { }\r\n  public billid;\r\n  public description: string;\r\n  public total_amount: number;\r\n  public bill_created_byId: number;\r\n  public bill_updated_byId: number;\r\n  public groupId: number;\r\n  public bill_date: Date;\r\n  public bill_created_at: Date;\r\n  public bill_updated_at: Date;\r\n  public payers: PayerResponse[];\r\n  public sharedwiths: SharedWithResponse[];\r\n  public settlements: SettlementResponse[];\r\n}\r\nexport class BillGetResponse {\r\n  constructor() { }\r\n  public billid;\r\n  public description: string;\r\n  public total_amount: number;\r\n  public bill_created_byId: Detail;\r\n  public bill_updated_byId: Detail;\r\n  public groupId: Detail;\r\n  public bill_date: Date;\r\n  public bill_created_at: Date;\r\n  public bill_updated_at: Date;\r\n  public payers: BillDetail[];\r\n  public sharedwiths: BillDetail[];\r\n}\r\nexport class BillDetail {\r\n  constructor() { }\r\n  public id;\r\n  public name: string;\r\n  public amount: number;\r\n}\r\nexport class PayerResponse {\r\n  constructor() { }\r\n  public paid_byId;\r\n  public amount_paid: number;\r\n  public billId: number;\r\n}\r\nexport class SharedWithResponse {\r\n  constructor() { }\r\n  public shared_withId;\r\n  public owes_amount: number;\r\n  public billId: number;\r\n}\r\nexport class SettlementResponse {\r\n  constructor() { }\r\n  public settlementid;\r\n  public payerId: number;\r\n  public payeeId: number;\r\n  public paid_amount: number;\r\n  public groupId: number;\r\n}\r\nexport class GetSettlementResponse {\r\n  constructor() { }\r\n  public payer: Detail;\r\n  public payee: Detail;\r\n  public amount: number;\r\n  public group: Detail;\r\n}\r\nexport class settle {\r\n  constructor() { }\r\n  public id;\r\n  public amt: number;\r\n}\r\nexport class TransactionGetResponse {\r\n  public payerId: Detail;\r\n  public payeeId: Detail;\r\n  public paid_amount: number;\r\n  public paid_on: Date;\r\n  public groupId: Detail;\r\n}\r\nexport class TransactionResponse {\r\n  public transactionid;\r\n  public payerId: number;\r\n  public payeeId: number;\r\n  public paid_amount: number;\r\n  public paid_on: Date;\r\n  public groupId: number;\r\n}\r\nexport class GroupBalance {\r\n  constructor() { }\r\n  public member: Detail;\r\n  public amt: number;\r\n  public status: string;\r\n}\r\nexport class GroupBalanceDetail {\r\n  constructor() { }\r\n  public id: number;\r\n  public detail: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BillResponse, TransactionResponse } from '../Models/Model';\r\n@Injectable()\r\nexport class BillService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  addNewBill(bill: BillResponse) {\r\n    return this.http.post(\"api/Bill/addBill\", bill);\r\n  }\r\n  getUserBills(userid: number) {\r\n    return this.http.get(\"api/Bill/allbills/\" + userid);\r\n  }\r\n  getGroupBills(id: number) {\r\n    return this.http.get(\"api/Bill/getGroupBills/\" + id);\r\n  }\r\n  getFriendBills(userid: number, friendid: number) {\r\n    return this.http.get(\"api/Bill/getFriendBills/\" + userid + \"/\" + friendid);\r\n  }\r\n  getFriendSettlements(userid: number, friendid: number) {\r\n    return this.http.get(\"api/settlements/\" + userid + \"/\" + friendid);\r\n  }\r\n\r\n  settleUp(settle: TransactionResponse) {\r\n    return this.http.post(\"api/settleup\", settle);\r\n  }\r\n\r\n  getGroupSettlement(userid: number, groupid: number) {\r\n    return this.http.get(\"api/GroupSettlements/\" + userid + \"/\" + groupid);\r\n  }\r\n  getUserSettlements(userid: number) {\r\n    return this.http.get(\"api/userSettlements/\" + userid);\r\n  }\r\n  getFriendTransactions(userid: number, friendid: number) {\r\n    return this.http.get(\"api/frd/expense/\" + userid + \"/\" + friendid);\r\n  }\r\n  getGroupTransactions(groupid: number) {\r\n    return this.http.get(\"api/group/expense/\" + groupid);\r\n  }\r\n  getUserExpenseTransaction(userid: number) {\r\n    return this.http.get(\"api/all/expense/\" + userid);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable()\r\nexport class FriendService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  getFriendData(id: number) {\r\n    return this.http.get(\"api/Friend/getFriendData/\" + id);\r\n  }\r\n  addNewFriend(userid: number, name: string, email: string) {\r\n    return this.http.get(\"api/Friend/addFriend/\" + userid + \"/\" + name + \"/\" + email);\r\n  }\r\n  removeFriend(userid: number, friendid: number) {\r\n    return this.http.delete(\"api/Friend/removeFriend/\" + userid + \"/\" + friendid);\r\n  }\r\n  addFriend(userid: number, friendid: number) {\r\n    return this.http.post(\"api/Friend/addNewFriend/\", userid + \"/\" + friendid);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Group, CreateGroupResponse } from '../Models/Model';\r\n@Injectable()\r\nexport class GroupService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  CreateGroup(group: CreateGroupResponse) {\r\n    return this.http.post(\"api/Group/addGroup\", group);\r\n  }\r\n\r\n  getFriendGroups(userid: number, friendid: number) {\r\n    return this.http.get(\"api/Group/getFriendGroups/\" + userid + \"/\" + friendid);\r\n  }\r\n  GetGroupInfo(id: any) {\r\n    return this.http.get(\"api/Group/getGroupData/\" + id);\r\n  }\r\n  addGroupMember(userid: number, groupid: number) {\r\n    return this.http.get(\"api/GroupMember/addMember\" + \"/\" + userid + \"/\" + groupid);\r\n  }\r\n  removeGroupMember(userid: number, groupid: number) {\r\n    return this.http.delete(\"api/GroupMember/deleteMember/\" + userid + \"/\" + groupid);\r\n  }\r\n  updateGroup(groupid: number, group: Group) {\r\n    return this.http.put(\"api/Group/updateGroup/\" + groupid, group);\r\n  }\r\n  deleteGroup(id: number) {\r\n    return this.http.delete(\"api/Group/deleteGroup/\" + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HubConnection } from '@aspnet/signalr';\r\nimport * as signalR from '@aspnet/signalr';\r\n\r\n@Injectable()\r\nexport class HubConnectionService {\r\n  private _hubConnection: HubConnection;\n\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  update() {\r\n    this._hubConnection.invoke('SendToAll'); \r\n  }\r\n  private init() {\r\n    this._hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('/serve')\r\n      .configureLogging(signalR.LogLevel.Information).build();\r\n\r\n    this._hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started!'))\r\n      .catch(err => console.log('Error while establishing connection :'));\r\n    this._hubConnection.on('send', () => { });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../Models/Model';\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  user: any;\r\n  setuser(user: any) {\r\n    this.user = user;\r\n  }\r\n  updateUser(user: User) {\r\n    return this.http.put(\"api/User/updateUser/\" + user.userid, user);\r\n  }\r\n  getUserData(id: number) {\r\n    return this.http.get(\"api/User/getUser/\" + id);\r\n  }\r\n  getUser(uname: string, password: string) {\r\n    return this.http.get(\"/api/User/login\" + \"/\" + uname + \"/\" + password);\r\n  }\r\n  register(username: string, email: string, password: string) {\r\n    return this.http.get(\"/api/User/Register\" + \"/\" + username + \"/\" + email + \"/\" + password);\r\n  }\r\n  getFriends(id: number) {\r\n    return this.http.get(\"api/Friend/getFriend/\" + id);\r\n  }\r\n  getGroups(id: number) {\r\n    return this.http.get(\"api/Group/getGroups/\" + id);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component,OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { HubConnectionService } from './Services/HubService';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private _router: Router, private service: HubConnectionService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n   // this.service.update();\r\n\r\n    this._router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n    this._router.events.subscribe((evt) => {\r\n      if (evt instanceof NavigationEnd) {\r\n        this._router.navigated = false;\r\n        window.scrollTo(0, 0);\r\n      }\r\n    });\r\n   \r\n\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component'\nimport { UserService } from './Services/UserService';\r\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RoutingModuleModule } from './routing-module.module';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RoutingModuleModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent },\n      { path: 'home', component: HomeComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent }],\n      { useHash: true })\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"label.nav-link{\\r\\n  border-color:black;\\r\\n  background-color:grey;\\r\\n  color:white;\\r\\n}\\r\\n.hidescroll:hover{\\r\\n  overflow-y:scroll;\\r\\n}\\r\\n.hidescroll::-webkit-scrollbar { width: 10px; }\\r\\n.hidescroll::-webkit-scrollbar-track {\\r\\n    box-shadow: inset 0 0 5px grey; \\r\\n    border-radius: 5px;\\r\\n}\\r\\n.hidescroll::-webkit-scrollbar-thumb {\\r\\n    background-color:lightgray; \\r\\n    border-radius: 5px;\\r\\n}\\r\\n/*.hidescroll::-webkit-scrollbar-thumb:hover {\\r\\n    background: #b30000; \\r\\n}*/\\r\\ndiv.nav-item{\\r\\n  width:180px;\\r\\n}\\r\\nnav.navbar{\\r\\n  background-color:whitesmoke;\\r\\n}\\r\\nlabel.list{\\r\\n  background-color:darkgrey;\\r\\n}\\r\\n.modal-content{\\r\\n  width:300px;\\r\\n}\\r\\n.form-control{\\r\\n  width:auto;\\r\\n}\\r\\n.myrouter{\\r\\n  min-height:initial;\\r\\n  max-height:500px;\\r\\n  overflow-y:scroll;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div style=\\\"height:auto\\\">\\r\\n\\r\\n  <button style=\\\"position:absolute;top:25px;left:1000px;width:100px\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-info\\\">logout</button>\\r\\n  <button class=\\\"btn btn-secondary\\\" style=\\\"color:white;position:absolute;top:25px;left:1111px;width:100px\\\" [routerLink]=\\\"['account/setting']\\\">\\r\\n    {{user.user_name}}\\r\\n    <span class=\\\"glyphicon glyphicon-lg glyphicon-cog\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"col-lg-2 hidescroll\\\" style=\\\"height:550px\\\" role=\\\"scrollbar\\\">\\r\\n    <nav style=\\\" width:190px\\\" class=\\\"navbar flex-column\\\">\\r\\n      <div class=\\\"nav flex-column\\\">\\r\\n        <div class=\\\"nav-item\\\">\\r\\n          <label class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-tasks\\\"></span>  Dashboard\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"nav-item\\\" [routerLink]=\\\"['expense']\\\">\\r\\n          <label class=\\\"nav-link\\\"><span class=\\\"glyphicon glyphicon-th-list\\\"></span>  All Expense </label>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"nav-item\\\">\\r\\n          <label class=\\\"nav-link\\\">\\r\\n            Groups\\r\\n            <span class=\\\"glyphicon glyphicon-plus\\\" style=\\\"position:relative;left:80px\\\" [routerLink]=\\\"['newgroup']\\\"></span>\\r\\n          </label>\\r\\n          <div>\\r\\n            <label class=\\\"nav-link list\\\" *ngFor=\\\"let group of groups\\\" [routerLink]=\\\"['group',group.groupid]\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-tag\\\"></span> {{ group.group_name }}\\r\\n            </label>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\">\\r\\n          <label class=\\\"nav-link\\\">\\r\\n            Friends\\r\\n            <span class=\\\"glyphicon glyphicon-plus\\\" style=\\\"position:relative;left:80px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"></span>\\r\\n          </label>\\r\\n          <div>\\r\\n            <label class=\\\"nav-link list\\\" *ngFor=\\\"let friend of friends\\\" [routerLink]=\\\"['friend',friend.userid]\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n              {{ friend.user_name }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add New Friend</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form class=\\\"form\\\" novalidate>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"frd_name\\\" placeholder=\\\"Enter friend Name\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-envelope\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"frd_email\\\" placeholder=\\\"Enter your Email_id\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\"  class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Add</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </nav>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-10 myrouter\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FriendResponse, CreateGroupResponse, CommonResponse, User } from '../Models/Model';\r\nimport { UserService } from '../Services/UserService';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FriendService } from '../Services/FriendService';\r\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\n  id: number;\n  constructor(private router: Router, private user_service: UserService, private friend_service: FriendService, private route: ActivatedRoute) { }\n\n  friends: FriendResponse[];\n  groups: CreateGroupResponse[];\n  public user = new User();\n  frd_name: string;\n  frd_email: string;\n  Label: string;\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.user_service.getFriends(this.id).subscribe\n      ((data: FriendResponse[]) => {\n        this.friends=data\n        //  console.log(data),\r\n         // console.log(this.friends)\r\n      });\n    this.user_service.getGroups(this.id).subscribe\n      ((data: CreateGroupResponse[]) => {\n        this.groups = data\n          //console.log(data),\r\n          //console.log(this.groups)\r\n      });\n    //console.log(this.friends);\n    //console.log(this.groups);\n\n    this.user_service.getUserData(this.id)\n      .subscribe((data: User) => this.user = data);\n  }\n  onSubmit() {\n    console.log(this.frd_name);\r\n    console.log(this.frd_email);\r\n    this.friend_service.addNewFriend(this.id, this.frd_name, this.frd_email)\r\n      .subscribe(\r\n      (data: CommonResponse) => {\r\n        console.log(data),\r\n          this.Label = \"hide\",\r\n          alert(\"Successfully Added a new friend\"),\r\n          this.router.navigate(['/Board', this.id])\r\n      },\r\n      error => {\r\n        alert(\"user does not exist\");\r\n        this.frd_name = null;\r\n        this.frd_email = null;\n\r\n      });\r\n  }\n  logout() {\n    if (confirm(\"Are you sure you want to log out?\")) {\r\n      this.router.navigate(['/home'])\r\n    }\r\n  }\n}\n","module.exports = \".form-control{\\r\\n  height:40px;\\r\\n  width:400px;\\r\\n}\\r\\n.table{\\r\\n  width:400px;\\r\\n}\\r\\n.container1{\\r\\n  width:500px;\\r\\n  height:400px;\\r\\n  background-color:whitesmoke;\\r\\n}\\r\\n.container2{\\r\\n  height:300px;\\r\\n  width:400px;\\r\\n  position:relative;\\r\\n  left:50px;\\r\\n  top:50px;\\r\\n  background-color:white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\" style=\\\"width:auto\\\">\\r\\n  <h3>START A NEW GROUP</h3>\\r\\n  <br />\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n      <label>GROUP NAME</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"group_name\\\" [(ngModel)]=\\\"newGroup.group_name\\\" placeholder=\\\"MY GROUP NAME\\\" /><br />\\r\\n      <label>GROUP MEMBERS</label>\\r\\n      <div>\\r\\n        <table class=\\\"table\\\" *ngIf='friends && friends.length'>\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>People</th>\\r\\n              <th></th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngFor=\\\"let friend of friends\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{ friend.user_name }}\\r\\n              </td>\\r\\n              <td>\\r\\n                <button type=\\\"button\\\" id=\\\"{{friend.userid}}\\\" class=\\\"btn btn-success\\\" (click)=\\\"addclick(friend)\\\">Add</button>\\r\\n              </td>\\r\\n              <td><button type=\\\"button\\\" id=\\\"{{friend.userid}}\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeclick(friend)\\\">Remove</button></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <!--<label style=\\\"font-weight:normal\\\">\\r\\n        {{ friend.user_name }}\\r\\n      </label>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Add</button>-->\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\">Save</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <div class=\\\"container1\\\">\\r\\n      <div class=\\\"container2\\\">\\r\\n        <div style=\\\"position:relative;left:10px;top:15px\\\">\\r\\n          <label>Members:</label>\\r\\n        </div>\\r\\n        <div style=\\\"position:relative;left:10px;top:15px\\\">\\r\\n          <div>\\r\\n            <div *ngFor=\\\"let member of groupmember\\\">{{member}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../Services/UserService';\r\nimport { FriendResponse, GroupMember, CreateGroupResponse } from '../Models/Model';\r\nimport { GroupService } from '../Services/GroupService';\r\nimport { FriendService } from '../Services/FriendService';\r\nimport { HubConnectionService } from '../Services/HubService';\r\n\r\n\n@Component({\n  selector: 'app-create-group',\n  templateUrl: './create-group.component.html',\n  styleUrls: ['./create-group.component.css']\n})\nexport class CreateGroupComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private router: Router,\n    public friend_service: FriendService, private service: HubConnectionService,public user_service: UserService, public group_service: GroupService) { }\n  pmid: any;\n  //AddButton: boolean = false;\n  //RemoveButton: boolean = true;\n  friends: FriendResponse[];\n  public newGroup = new CreateGroupResponse();\n  groupmemberid: GroupMember[] = [];\n  groupmember: any[] = [];\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\r\n      this.pmid = params['id']\r\n    });\r\n    this.user_service.getFriends(this.pmid)\r\n      .subscribe((data: FriendResponse[]) => {\r\n        this.friends = data\r\n      })\r\n\r\n    var member = new GroupMember();\r\n    member.userid = this.pmid;\r\n    this.groupmemberid.push(member);\r\n  }\n\n\n  addclick(friend: FriendResponse) {\n   // console.log(friend);\r\n    var flag = 0;\r\n    for (var x = 0; x < this.groupmemberid.length; x++) {\r\n      if (this.groupmemberid[x].userid == friend.userid)\r\n        flag = 1;\r\n    }\r\n    if (flag == 0) {\r\n      var member = new GroupMember();\r\n      member.userid = friend.userid\r\n      this.groupmemberid.push(member);\r\n      this.groupmember.push(friend.user_name);\r\n    }\r\n      \r\n\r\n    console.log(this.groupmemberid);\r\n  }\n  removeclick(friend: FriendResponse) {\n    //console.log(friend);\n    var flag = 0;\r\n    var index;\r\n    for (var x = 0; x < this.groupmemberid.length; x++) {\r\n      if (this.groupmemberid[x].userid == friend.userid) {\r\n        flag = 1;\r\n        index = x;\r\n      }\r\n        \r\n    }\r\n    if (flag == 1) {\r\n      this.groupmemberid.splice(index, 1);\r\n      this.groupmember.splice(index-1, 1);\r\n    }\r\n\r\n    console.log(this.groupmemberid);\n  }\n\n\n  //addFriends() {\n  //  for (var i = 0; i < this.groupmemberid.length; i++) {\r\n  //    for (var j = i + 1; j < this.groupmemberid.length; j++) {\r\n  //      this.friend_service.addFriend(this.groupmemberid[i].userid, this.groupmemberid[j].userid).\r\n  //        subscribe(data => console.log(data));\r\n  //    }\r\n  //  }\r\n  //}\n\n\n\n  onSubmit() {\n    this.newGroup.group_created_by = this.pmid;\n    this.newGroup.groupMembers = this.groupmemberid;\n    this.newGroup.is_simplified_depts = false;\n    console.log(this.newGroup);\r\n    this.group_service.CreateGroup(this.newGroup)\r\n      .subscribe(data => console.log(data));\r\n    // this.addFriends();\r\n    this.service.update();\r\n    this.router.navigate(['/Board', this.pmid])\r\n  }\n  //addclick() {\n  // // console.log(friend);\n  //  this.AddButton = true;\r\n  //  this.RemoveButton = false\r\n  //  [disabled] = \"AddButton\"\r\n  //}\n  //removeclick() {\n  //  this.RemoveButton = true;\r\n  //  this.AddButton = false\r\n  //  [disabled] = \"RemoveButton\"\r\n  //}\n  }\n","module.exports = \".row{\\r\\n  height:500px;\\r\\n}\\r\\ndiv.navbar{\\r\\n  background-color:lightgray;\\r\\n  color:grey;\\r\\n  height:75px;\\r\\n}\\r\\ndiv.navbar1{\\r\\n  background-color:lightgray;\\r\\n  color:white;\\r\\n  height:50px;\\r\\n  position:relative;\\r\\n}\\r\\nlabel.nav-link{\\r\\n  border-color:black;\\r\\n  background-color:whitesmoke;\\r\\n  color:grey\\r\\n}\\r\\nlabel.nav-link:hover{\\r\\n  background-color:lightgray;\\r\\n  color:black;\\r\\n}\\r\\n.detail{\\r\\n  background-color:whitesmoke;\\r\\n  height:50px;\\r\\n}\\r\\n.modal{\\r\\n  position:fixed;\\r\\n  right:100px;\\r\\n}\\r\\n.payer.modal.fade:not(.in) .modal-dialog{\\r\\n    -webkit-transform: translate3d(-25%, 0, 0);\\r\\n    transform: translate3d(-25%, 0, 0);\\r\\n}\\r\\n.payer{\\r\\n  position:fixed;\\r\\n  left:700px;\\r\\n}\\r\\n.payer1{\\r\\n  position:fixed;\\r\\n  left:200px;\\r\\n}\\r\\n.modal-content{\\r\\n  width:300px;\\r\\n}\\r\\n.design1{\\r\\n    align-content:center;\\r\\n}\\r\\n.design{\\r\\n  top:2px;\\r\\n  vertical-align:middle;\\r\\n  line-height:22px;\\r\\n  text-align:center;\\r\\n}\\r\\n.myscroll.modal-body {\\r\\n  min-height:initial;\\r\\n  max-height:300px;\\r\\n  overflow-y:scroll;\\r\\n}\\r\\n.modal-header{\\r\\n  background-color:grey;\\r\\n  color:white;\\r\\n}\\r\\n.list{\\r\\n  font-size:small;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-8 border-right\\\">\\r\\n    <div class=\\\"navbar navbar-expand-sm\\\">\\r\\n      <h3>Dashboard</h3>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" style=\\\"position:absolute;left:500px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#AddBill\\\">Add Bill</button>\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"AddBill\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add Bill</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n              <div data-toggle=\\\"modal\\\" data-target=\\\"#BillfriendListModal\\\">\\r\\n                <label>\\r\\n                  Share with:\\r\\n                </label>\\r\\n              </div>\\r\\n              <div>\\r\\n\\r\\n                <label style=\\\"font-weight:normal;background-color:whitesmoke\\\"\\r\\n                       *ngFor=\\\"let member of billShareWith\\\">\\r\\n                  {{ member.name }}\\r\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" (click)=\\\"removeMember(member.id)\\\"></span>\\r\\n                </label>\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <form class=\\\"form\\\" #myform=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addBill.description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-usd\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addBill.total_amount\\\" name=\\\"amount\\\" placeholder=\\\"00.00\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addBill.bill_date\\\" name=\\\"date\\\" placeholder=\\\"MM-DD-YY\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                  Paid By\\r\\n                  <button type=\\\"button\\\" class=\\\"btn\\\" style=\\\"background-color:lightgray;border-radius:10px\\\"\\r\\n                          data-toggle=\\\"modal\\\" data-target=\\\"#BillPayer\\\">\\r\\n                    {{ paidby }}\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" (click)=\\\"AddBillData()\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!myform.valid\\\">Add</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"BillfriendListModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!--Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Select Friends</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeFriendModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\"\\r\\n                     (click)=\\\"AddBillMember(friend.userid,friend.user_name)\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n                {{friend.user_name}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"BillPayer\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Choose Payer</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closePayerModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body myscroll\\\">\\r\\n              <div class=\\\"payerlist\\\">\\r\\n\\r\\n                <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\"\\r\\n                       (click)=\\\"addSinglePayer(member.id)\\\" *ngFor=\\\"let member of billShareWith\\\">\\r\\n                  {{ member.name }}\\r\\n                </label>\\r\\n                <label class=\\\"nav-link\\\" (click)=\\\"showpayer()\\\">\\r\\n                  Multiple Payers\\r\\n                </label>\\r\\n                <div *ngIf=\\\"showPayer\\\">\\r\\n                  <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" *ngFor=\\\"let member of billShareWith\\\">\\r\\n                    {{ member.name }}\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-usd\\\"></i></span>\\r\\n                      <input type=\\\"text\\\" #amt class=\\\"form-control\\\" placeholder=\\\"0.00\\\" />\\r\\n                    </div>\\r\\n                    <a (click)=\\\"addpayer(member.id,amt.value)\\\">Add</a>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\" style=\\\"position:absolute;left:600px\\\"\\r\\n              data-toggle=\\\"modal\\\" data-target=\\\"#FriendSettleModal\\\">\\r\\n        Settle Up\\r\\n      </button>\\r\\n\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"FriendSettleModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!--Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Settle Up</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeSettleModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <div *ngIf=\\\"showInfo\\\">\\r\\n                <div style=\\\"text-align:center\\\">\\r\\n                  <h4>Choose a payment method</h4>\\r\\n                </div><br />\\r\\n                <div>\\r\\n                  <button class=\\\"btn btn-success\\\" style=\\\"width:250px\\\" (click)=\\\"showsett()\\\">Record a cash Payment</button>\\r\\n                </div><br />\\r\\n                <div>\\r\\n                  <button class=\\\"btn btn-danger\\\" style=\\\"width:250px\\\">Pay via Paypal</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"design1\\\" *ngIf=\\\"showSettle\\\">\\r\\n                <div>\\r\\n                  <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"font-size:40px;position:relative;left:40px\\\"></span>\\r\\n                  <span class=\\\"glyphicon glyphicon-arrow-right\\\" style=\\\"font-size:30px;position:relative;left:60px\\\"></span>\\r\\n                  <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"font-size:40px;position:relative;left:80px\\\"></span>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <label style=\\\"position:relative;left:40px\\\">{{ user.user_name}}</label>\\r\\n                  <label style=\\\"position:relative;left:60px\\\">paid</label>\\r\\n                  <label role=\\\"button\\\" style=\\\"position:relative;left:80px\\\"\\r\\n                         data-toggle=\\\"modal\\\" data-target=\\\"#friendListModal\\\">{{ Pay_to }}</label>\\r\\n                </div>\\r\\n                <br />\\r\\n                <div class=\\\"form-group\\\" style=\\\"position:relative;left:50px\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-usd\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settleAmt\\\" style=\\\"width:100px\\\" placeholder=\\\"00.00\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button class=\\\"btn check\\\" style=\\\"position:relative;border-radius:10px;left:40px\\\"\\r\\n                          data-toggle=\\\"modal\\\" data-target=\\\"#groupListModal\\\" (click)=\\\"showGroups()\\\">\\r\\n                    {{ setAmong }}\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"addSettlement()\\\">Save</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"groupListModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!--Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Choose Groups</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeSettleGrpModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" (click)=\\\"selectNonGroup()\\\">\\r\\n                Non Group\\r\\n              </label>\\r\\n              <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" (click)=\\\"selectGroup(group.groupid,group.group_name)\\\" *ngFor=\\\"let group of groups\\\">\\r\\n                {{group.group_name}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"friendListModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!--Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Choose Friends</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeSettleFriendModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\"\\r\\n                     (click)=\\\"selectFriend(friend.userid,friend.user_name)\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n                {{friend.user_name}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"detail\\\">\\r\\n      <div class=\\\"col-lg-4 design border-right\\\">\\r\\n        total balance\\r\\n        <div *ngIf=\\\"total>0\\\" style=\\\"color:green\\\">\\r\\n          {{total}}\\r\\n        </div>\\r\\n        <div *ngIf=\\\"total<0\\\" style=\\\"color:red\\\">\\r\\n          {{total}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4 design border-right\\\">\\r\\n        you owe\\r\\n        <div style=\\\"color:red\\\">\\r\\n          {{owe}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4 design\\\">\\r\\n        you are owed\\r\\n        <div style=\\\"color:green\\\">\\r\\n          {{owed}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div>\\r\\n      <div class=\\\"col-lg-6 border-right\\\">\\r\\n        <h4 class=\\\"border-bottom\\\" style=\\\"font-weight:bold;color:gray\\\">\\r\\n        YOU OWE</h4>\\r\\n        <div *ngFor=\\\"let info of details\\\">\\r\\n          <div *ngIf=\\\"info.amt<0\\\">\\r\\n              <h4>\\r\\n                {{info.member.name}}\\r\\n              </h4>\\r\\n              you owe  {{ 0-(info.amt)}}\\r\\n              <ul *ngFor=\\\"let detail of owedetails\\\" style=\\\"color:red\\\">\\r\\n                <li class=\\\"list\\\" *ngIf=\\\"detail.id==info.member.id\\\">{{detail.detail}}</li>\\r\\n              </ul>\\r\\n              <ul *ngFor=\\\"let detail of oweddetails\\\" style=\\\"color:green\\\">\\r\\n                <li class=\\\"list\\\" *ngIf=\\\"detail.id==info.member.id\\\">{{detail.detail}}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 border-left\\\" style=\\\"position:relative;right:1px; height:auto\\\">\\r\\n        <h4 class=\\\"border-bottom\\\" style=\\\"font-weight:bold;text-align:right;color:gray\\\">\\r\\n          YOU ARE OWED\\r\\n        </h4>\\r\\n          <div *ngFor=\\\"let info of details\\\">\\r\\n            <div *ngIf=\\\"info.amt>0\\\">\\r\\n              <h4>\\r\\n                {{info.member.name}}\\r\\n              </h4>\\r\\n              owes you {{ info.amt}}\\r\\n              <ul *ngFor=\\\"let detail of owedetails\\\" style=\\\"color:red\\\">\\r\\n                <li class=\\\"list\\\" *ngIf=\\\"detail.id==info.member.id\\\">{{detail.detail}}</li>\\r\\n              </ul>\\r\\n              <ul *ngFor=\\\"let detail of oweddetails\\\" style=\\\"color:green\\\">\\r\\n                <li class=\\\"list\\\" *ngIf=\\\"detail.id==info.member.id\\\">{{detail.detail}}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      Advertisements\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FriendResponse, User, GetSettlementResponse, CreateGroupResponse, TransactionResponse, Detail, BillResponse, PayerResponse, SharedWithResponse, SettlementResponse, settle, GroupBalanceDetail, GroupBalance, CommonResponse } from '../Models/Model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../Services/UserService';\r\nimport { GroupService } from '../Services/GroupService';\r\nimport { BillService } from '../Services/BillService';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private user_service: UserService,\n    private bill_service: BillService, private group_service: GroupService) { }\n\n  @ViewChild('closeModal') closeModal: ElementRef;\r\n  @ViewChild('closePayerModal') closePayerModal: ElementRef;\n  @ViewChild('closeFriendModal') closeFriendModal: ElementRef;\r\n  @ViewChild('closeSettleModal') closeSettleModal: ElementRef;\r\n  @ViewChild('closeSettleGrpModal') closeSettleGrpModal: ElementRef;\n  @ViewChild('closeSettleFriendModal') closeSettleFriendModal: ElementRef;\r\n\r\n  public user = new User();\n\n  friends: FriendResponse[];\n\n  billShareWith = new Array<Detail>();\n  public billsharewith = new Detail();\n\n  id: number;\n  showPayer: boolean = false;\n\n  paidby: any;\n\n\n  friendSettlement: GetSettlementResponse[];\n\n  allUserSettlement: GetSettlementResponse[];\n  owe: number=0;\n  owed: number=0;\n  total: number=0;\n  owedetails = new Array<GroupBalanceDetail>();\n  oweddetails = new Array<GroupBalanceDetail>();\n  details = new Array<GroupBalance>();\n  info = new GroupBalance();\n  member = new Detail();\n  detail = new GroupBalanceDetail();\n\n  public addBill = new BillResponse();\n\n  public payer = new PayerResponse();\n  payers = new Array<PayerResponse>();\n\n  public shareMember = new SharedWithResponse();\n  shareMembers = new Array<SharedWithResponse>();\n\n  public settlement = new SettlementResponse();\n  settlements = new Array<SettlementResponse>();\n\n  public sett = new settle();\n  //setts = new Array<settle>();\n\n  setPayers = new Array<settle>();\n  setShares = new Array<settle>();\n\n  Pay_to: any = \"Select\";\n  Pay_to_Id: number;\n  Pay_in: number;\n  setAmong: any = \"Non Group\";\n  my_date: any;\n  //isSett: GetSettlementResponse[];\n  showSettle: boolean = false;\n  showInfo: boolean = true;\n\n  settleUp = new TransactionResponse();\n\n  settleAmt: any = 0;\n  groups: CreateGroupResponse[];\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\r\n      this.id = params['id']\n    });\n\n    //this.id = this.route.snapshot.params['id'];\n    this.user_service.getFriends(this.id).subscribe\n      ((data: FriendResponse[]) => {\n        this.friends = data\n        for (var i = 0; i < this.friends.length; i++) {\n          this.info = new GroupBalance();\n          this.member = new Detail();\n          this.member.id = this.friends[i].userid;\n          this.member.name = this.friends[i].user_name;\n          this.info.member = this.member;\n          //this.info.member.name = this.friends[i].user_name;\r\n          this.info.status = \"false\";\r\n          this.info.amt = 0;\r\n          this.details.push(this.info);\r\n        }\n\n\n        this.bill_service.getUserSettlements(this.id)\n          .subscribe((data: GetSettlementResponse[]) => {\n            this.allUserSettlement = data;\r\n             // console.log(this.allUserSettlement);\r\n            for (var i = 0; i < this.allUserSettlement.length; i++) {\r\n\r\n              if (this.allUserSettlement[i].amount != 0) {\r\n\r\n                if (this.id == this.allUserSettlement[i].payer.id) {\r\n\r\n                  this.detail = new GroupBalanceDetail();\r\n                  this.detail.detail = \"You owe \" + this.allUserSettlement[i].payee.name + \" \" + this.allUserSettlement[i].amount;\r\n                  if (this.allUserSettlement[i].group == null) {\r\n                    this.detail.detail = this.detail.detail + \" for \" + \"'\" + \"Non Group Expense\" + \"'\";\r\n                  }\r\n                  else {\r\n                    this.detail.detail = this.detail.detail + \" for \" + \"'\" + this.allUserSettlement[i].group.name + \"'\";\r\n                  }\r\n                  this.detail.id = this.allUserSettlement[i].payee.id;\r\n                  this.owedetails.push(this.detail);\r\n                  var index = this.details.findIndex(c => c.member.id == this.detail.id);\r\n                  this.details[index].status = \"owe\";\r\n                  this.details[index].amt = this.details[index].amt - this.allUserSettlement[i].amount;\r\n                  //this.owe = this.owe - this.allUserSettlement[i].amount;\r\n\r\n                }\r\n\r\n                if (this.id == this.allUserSettlement[i].payee.id) {\r\n                  this.detail = new GroupBalanceDetail();\r\n                  this.detail.detail = this.allUserSettlement[i].payer.name + \" owes you \" + this.allUserSettlement[i].amount;\r\n                  if (this.allUserSettlement[i].group == null) {\r\n                    this.detail.detail = this.detail.detail + \" for \" + \"'\" + \"Non Group Expense\" + \"'\";\r\n                  }\r\n                  else {\r\n                    this.detail.detail = this.detail.detail + \" for \" + \"'\" + this.allUserSettlement[i].group.name + \"'\";\r\n                  }\r\n                  this.detail.id = this.allUserSettlement[i].payer.id;\r\n                  this.oweddetails.push(this.detail);\r\n                  var index = this.details.findIndex(c => c.member.id == this.detail.id);\r\n                  this.details[index].status = \"owes\";\r\n                  this.details[index].amt = this.details[index].amt + this.allUserSettlement[i].amount;\r\n                  //this.owed = this.owed + this.allUserSettlement[i].amount;\r\n                }\r\n              }\r\n              \r\n             \r\n              \r\n            }\r\n            for (var i = 0; i < this.details.length; i++) {\r\n              if (this.details[i].amt > 0) {\r\n                this.owed = this.owed + this.details[i].amt;\r\n              }\r\n              else if (this.details[i].amt < 0) {\r\n                this.owe = this.owe + this.details[i].amt;\r\n              }\r\n            }\r\n            this.total = this.owed - (0 - this.owe);\r\n            this.owe = 0 - (this.owe);\r\n          });\n\n        //console.log(this.details);\n        //console.log(this.oweddetails);\r\n        //console.log(this.owedetails);\r\n        //// console.log(this.friends)\r\n      });\n    this.user_service.getUserData(this.id)\n      .subscribe((data: User) => {\n        this.user = data,\r\n          this.billsharewith = new Detail();\r\n        this.billsharewith.id = this.user.userid;\r\n        this.billsharewith.name = this.user.user_name;\r\n        this.billShareWith.push(this.billsharewith);\r\n      });\n    this.paidby = \"Select Payer\";\n\n    \n  }\n\n\n  addpayer(id, amt) {\n    this.payer = new PayerResponse();\n    this.payer.paid_byId = id;\r\n    this.payer.amount_paid = amt;\r\n    this.payers.push(this.payer);\r\n  }\n\n  addSinglePayer(id) {\n    this.payer = new PayerResponse();\n    this.payers = new Array<PayerResponse>();\n    this.payer.paid_byId = id;\r\n    this.payer.amount_paid = this.addBill.total_amount;\r\n    this.user_service.getUserData(this.payer.paid_byId).subscribe(\r\n      (data: User) => this.paidby = data.user_name\r\n    );\r\n  }\n\n  AddBillMember(id, name) {\n    this.billsharewith = new Detail();\r\n    this.billsharewith.id = id;\r\n    this.billsharewith.name = name;\r\n    this.billShareWith.push(this.billsharewith);\r\n  }\n\n  removeMember(id) {\n    var index = this.billShareWith.findIndex(c => c.id === id);\r\n    console.log(index);\r\n    if (index == 0) {\r\n      alert(\"user cannot be removed\");\r\n    }\r\n    else\r\n    this.billShareWith.splice(index, 1);\r\n  }\n  showsett() {\n    if (this.showInfo == true) {\r\n      this.showInfo = false;\r\n      this.showSettle = true;\r\n    }\r\n  }\n\n  addSettlement() {\n    this.settleUp.payerId = this.id;\r\n    this.settleUp.payeeId = this.Pay_to_Id;\r\n    this.settleUp.paid_amount = this.settleAmt;\r\n    this.settleUp.groupId = this.Pay_in;\r\n    this.my_date = new Date().toLocaleString();\r\n    this.settleUp.paid_on = this.my_date;\r\n    this.bill_service.settleUp(this.settleUp)\r\n      .subscribe((data: CommonResponse) => {\r\n        if (data.status == true) {\r\n          alert(\"Settlement successful\")\r\n        }\r\n        else (\"Settlement Failed\")\r\n      },\r\n      error => alert(\"failed\"));\r\n    this.closeSettleModal.nativeElement.click();\r\n    this.closeSettleGrpModal.nativeElement.click();\r\n    this.closeSettleFriendModal.nativeElement.click();\r\n\r\n    this.settleUp = null;\r\n  }\n\n\n  nonGroup() {\n    this.bill_service.getFriendSettlements(this.id, this.Pay_to_Id)\n      .subscribe((data: GetSettlementResponse[]) => {\n        this.friendSettlement = data;\r\n        console.log(this.friendSettlement);\r\n        if (this.friendSettlement != null) {\r\n\r\n          var isSettlement = this.friendSettlement.find(c => c.group == null);\r\n           console.log(isSettlement);\r\n          if (isSettlement != null) {\r\n            if (isSettlement.payer.id == this.id)\r\n              this.settleAmt = isSettlement.amount;\r\n            else {\r\n              this.settleAmt = 0;\r\n            }\r\n          }\r\n          else {\r\n            this.settleAmt = 0;\r\n          }\r\n        }\r\n        else {\r\n          this.settleAmt = 0;\r\n        }\r\n      });\r\n  }\n\n  GroupSet(id) {\n    \n    this.bill_service.getFriendSettlements(this.id, this.Pay_to_Id)\n      .subscribe(\n        (data: GetSettlementResponse[]) => {\r\n          this.friendSettlement = data;\r\n\r\n         console.log(this.friendSettlement);\r\n          if (this.friendSettlement != null) {\r\n            var isSettlement = this.friendSettlement.find(c => c.group != null && c.group.id == id);\r\n            //this.isSett = this.friendSettlement.includes(c => c.group != null);\r\n            console.log(isSettlement);\r\n            //var isSettlement = this.isSett.find(c => c.group.id == id);\r\n          if (isSettlement != null) {\r\n            if (isSettlement.payer.id == this.id)\r\n              this.settleAmt = isSettlement.amount;\r\n            else {\r\n              this.settleAmt = 0;\r\n            }\r\n          }\r\n          else {\r\n            this.settleAmt = 0;\r\n          }\r\n        }\r\n        else {\r\n          this.settleAmt = 0;\r\n        }\r\n\r\n      });\r\n  }\n\n  selectGroup(id, name) {\n    console.log(id);\n    this.setAmong = name;\n    this.Pay_in = id;\n      this.GroupSet(id);\n    //console.log(this.Pay_to_Id);\r\n  }\n\n  showGroups() {\n    this.group_service.getFriendGroups(this.id, this.Pay_to_Id)\n      .subscribe((data: CreateGroupResponse[]) => {\n        //console.log(data)\r\n        this.groups = data;\r\n      });\r\n\r\n  }\n\n  selectFriend(id, name) {\n    this.Pay_to = name;\r\n    this.Pay_to_Id = id;\n    this.nonGroup();\n\r\n  }\n\n  selectNonGroup() {\n    this.setAmong = \"Non Group\";\r\n    this.nonGroup();\r\n  }\n\n  showpayer() {\n    this.paidby = \"multiple\"\n    if (this.showPayer == false)\r\n      this.showPayer = true;\r\n    else\r\n      this.showPayer = false;\r\n  }\n\n\n  AddBillData() {\n    if (this.billShareWith.length == 1) {\n      alert(\"Please select member to share the bill\");\r\n    }\n    else if (this.payer.paid_byId == null) {\n      alert(\"Please select payer\");\r\n    }\n    else {\n\n      this.my_date = new Date().toLocaleString();\n      this.addBill.bill_created_at = this.my_date;\n      this.addBill.bill_created_byId = this.id;\n      this.addBill.bill_updated_at = this.my_date;\n      this.addBill.bill_updated_byId = this.id;\n      if (this.payers.length == 0) {\n        this.payers.push(this.payer);\r\n      }\n      var div = Number.parseFloat((this.addBill.total_amount / this.billShareWith.length).toFixed(2));\n      //div = Math.round(div);\n      for (var i = 0; i < this.billShareWith.length; i++) {\n        this.shareMember = new SharedWithResponse();\r\n        this.shareMember.owes_amount = div;\r\n        this.shareMember.shared_withId = this.billShareWith[i].id;\r\n        this.shareMembers.push(this.shareMember);\r\n      }\n\n\n\n\n      if (this.payers.length == 1) {\n        var payee = this.payer.paid_byId;\r\n        for (var i = 0; i < this.shareMembers.length; i++) {\r\n          if (payee != this.shareMembers[i].shared_withId) {\r\n            var payer = this.shareMembers[i].shared_withId;\r\n            var amt = this.shareMembers[i].owes_amount;\r\n            this.settlement = new SettlementResponse();\r\n            this.settlement.payeeId = payee;\r\n            this.settlement.payerId = payer;\r\n            this.settlement.paid_amount = amt;\r\n            if (this.settlement.paid_amount != 0)\r\n              this.settlements.push(this.settlement);\r\n          }\r\n        }\r\n      }\n      else {\n        for (var i = 0; i < this.shareMembers.length; i++) {\n          this.sett = new settle();\r\n\r\n          this.sett.id = this.shareMembers[i].shared_withId;\r\n          var amt = 0;\r\n          for (var j = 0; j < this.payers.length; j++) {\r\n            if (this.shareMembers[i].shared_withId === this.payers[j].paid_byId) {\r\n              if (this.payers[j].amount_paid == div) {\r\n                amt = 1;\r\n              }\r\n              else if (this.payers[j].amount_paid > div) {\r\n                amt = this.payers[j].amount_paid - div;\r\n                this.sett.amt = amt;\r\n                this.setPayers.push(this.sett);\r\n              }\r\n\r\n              else {\r\n                amt = this.shareMembers[i].owes_amount - this.payers[j].amount_paid;\r\n                this.sett.amt = amt;\r\n                this.setShares.push(this.sett);\r\n              }\r\n            }\r\n          }\r\n          if (amt == 0) {\r\n            this.sett.amt = this.shareMembers[i].owes_amount;\r\n            this.setShares.push(this.sett);\r\n          }\r\n        }\n\n        //console.log(this.setPayers);\n        //console.log(this.setShares);\n\n\n        if (this.setPayers.length > 1) {\n\n          if (this.setShares.length == 1) {\n            for (var i = 0; i < this.setPayers.length; i++) {\r\n              this.settlement = new SettlementResponse();\r\n              this.settlement.payerId = this.setShares[0].id;\r\n              this.settlement.payeeId = this.setPayers[i].id;\r\n              this.settlement.paid_amount = this.setPayers[i].amt;\r\n              if (this.settlement.paid_amount != 0)\r\n                this.settlements.push(this.settlement);\r\n            }\r\n          }\n          else {\n            for (var i = 0; i < this.setShares.length; i++) {\n              var mem = this.setPayers.find(data => data.amt === this.setShares[i].amt);\r\n              var index = this.setPayers.findIndex(data => data.amt === this.setShares[i].amt);\r\n              //console.log(index);\r\n\r\n              if (mem != null) {\r\n                this.settlement = new SettlementResponse();\r\n                payer = this.setShares[i].id;\r\n                payee = mem.id;\r\n                amt = mem.amt;\r\n                this.setPayers[index].amt = this.setPayers[index].amt - amt;\r\n                this.settlement.payerId = payer;\r\n                this.settlement.payeeId = payee;\r\n                this.settlement.paid_amount = amt;\r\n                if (this.settlement.paid_amount != 0)\r\n                  this.settlements.push(this.settlement);\r\n              }\r\n\r\n              else {\r\n                for (var j = 0; j < this.setPayers.length; j++) {\r\n                  if (this.setPayers[j].amt > this.setShares[i].amt) {\r\n                    this.settlement = new SettlementResponse();\r\n                    this.settlement.payerId = this.setShares[i].id;\r\n                    this.settlement.payeeId = this.setPayers[j].id;\r\n                    this.settlement.paid_amount = this.setShares[i].amt;\r\n                    this.setShares[i].amt = this.setShares[i].amt - this.settlement.paid_amount;\r\n                    this.setPayers[j].amt = this.setPayers[j].amt - this.settlement.paid_amount;\r\n                    if (this.settlement.paid_amount != 0)\r\n                      this.settlements.push(this.settlement);\r\n                  }\r\n                  else if (this.setPayers[j].amt > 0) {\r\n                    this.settlement = new SettlementResponse();\r\n                    this.settlement.payerId = this.setShares[i].id;\r\n                    this.settlement.payeeId = this.setPayers[j].id;\r\n                    this.settlement.paid_amount = this.setPayers[j].amt;\r\n                    this.setShares[i].amt = this.setShares[i].amt - this.settlement.paid_amount;\r\n                    this.setPayers[j].amt = this.setPayers[j].amt - this.settlement.paid_amount;\r\n                    if (this.settlement.paid_amount != 0)\r\n                      this.settlements.push(this.settlement);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\n        else if (this.setPayers.length == 1) {\n          for (var i = 0; i < this.setShares.length; i++) {\r\n            this.settlement = new SettlementResponse();\r\n            this.settlement.payerId = this.setShares[i].id;\r\n            this.settlement.payeeId = this.setPayers[0].id;\r\n            this.settlement.paid_amount = this.setShares[i].amt;\r\n            if (this.settlement.paid_amount != 0)\r\n              this.settlements.push(this.settlement);\r\n          }\r\n        }\r\n\n\n        //console.log(this.setPayers);\n        //console.log(this.setShares);\n\r\n      }\n      this.addBill.payers = this.payers;\n      this.addBill.sharedwiths = this.shareMembers;\n      this.addBill.settlements = this.settlements;\n      console.log(this.addBill);\r\n      this.bill_service.addNewBill(this.addBill)\r\n        .subscribe((data: CommonResponse) => {\r\n          if (data.status == true) {\r\n            alert(\"Bill Added Successfully\")\r\n          }\r\n          else (\"Failed to add the bill\")\r\n        });\r\n      this.closeModal.nativeElement.click();\r\n      this.closePayerModal.nativeElement.click();\r\n      this.closeFriendModal.nativeElement.click();\r\n    }\n  }\n}\n\n\n","module.exports = \"div.navbar{\\r\\n  background-color:lightgray;\\r\\n  color:grey;\\r\\n  height:75px;\\r\\n}\\r\\n.design1{\\r\\n  vertical-align:middle;\\r\\n  text-align:center;\\r\\n}\\r\\ndiv.billNav{\\r\\n  background-color:whitesmoke;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-8 border-right\\\">\\r\\n    <div class=\\\"navbar navbar-expand-sm\\\">\\r\\n      <h3>All Expense</h3>\\r\\n    </div>\\r\\n    <div class=\\\"billNav\\\">\\r\\n      <!--<div class=\\\"panel-group\\\">-->\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n        <div class=\\\"number\\\">31</div>\\r\\n        </div>-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-11\\\">\\r\\n              <label class=\\\"panel-title\\\" style=\\\"color:gray\\\">\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#set\\\">Settlements</a>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div id=\\\"set\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"transactions && transactions.length\\\">\\r\\n\\r\\n            <div class=\\\"billNav\\\" *ngFor=\\\"let settle of transactions\\\">\\r\\n              <!--<div class=\\\"panel-group\\\">-->\\r\\n              <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n          <div class=\\\"number\\\">31</div>\\r\\n          </div>-->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-1 design1\\\">\\r\\n                      {{ settle.paid_on | date:'MMM'}}\\r\\n                      <div class=\\\"design\\\">\\r\\n                        {{ settle.paid_on | date:'dd'}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-11\\\">\\r\\n                      <label style=\\\"font-weight:normal\\\" class=\\\"panel-title\\\" *ngIf=\\\"settle.groupId==null\\\">\\r\\n                        {{settle.payerId.name }} paid {{settle.payeeId.name}} {{settle.paid_amount | currency:'INR'}}\\r\\n                      </label>\\r\\n                      <label class=\\\"panel-title\\\" style=\\\"font-weight:normal\\\" *ngIf=\\\"settle.groupId!=null\\\">\\r\\n                        {{settle.payerId.name }} paid {{settle.payeeId.name}} {{settle.paid_amount | currency:'INR'}} in \\\"{{ settle.groupId.name}}\\\"\\r\\n                      </label>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <!--<div id=\\\"\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body border-bottom\\\">\\r\\n            <br />\\r\\n           fjklf\\r\\n          </div>\\r\\n\\r\\n        </div>-->\\r\\n                <!--</div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"!transactions || !transactions.length\\\">\\r\\n            No settlement exist\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"billNav\\\" *ngFor=\\\"let bill of bills\\\">\\r\\n      <!--<div class=\\\"panel-group\\\">-->\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n        <div class=\\\"number\\\">31</div>\\r\\n        </div>-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-1 design\\\">\\r\\n              {{ bill.bill_created_at | date:'MMM'}}\\r\\n              <div class=\\\"design\\\">\\r\\n                {{ bill.bill_created_at | date:'dd'}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-7\\\">\\r\\n              <label class=\\\"panel-title\\\" style=\\\"color:grey\\\">\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#{{bill.billid}}\\\">{{bill.description}}</a>\\r\\n              </label>\\r\\n            </div>\\r\\n            <!--<div class=\\\"col-lg-4\\\">\\r\\n              <div class=\\\"col-lg-6 design\\\">\\r\\n                Paid by\\r\\n                <div class=\\\"design\\\">\\r\\n                  0000\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6 design\\\">\\r\\n                lent\\r\\n                <div class=\\\"design\\\">\\r\\n                  0000\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>-->\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div id=\\\"{{bill.billid}}\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body border-bottom\\\">\\r\\n            {{bill.description}}\\r\\n            <br />\\r\\n            <h4>{{bill.total_amount | currency:'INR'}}</h4>\\r\\n            Added by {{ bill.bill_created_by.name}}\\r\\n            on {{bill.bill_created_at | date:'MMMM'}} {{bill.bill_created_at | date:'dd'}},{{bill.bill_created_at | date:'yyyy'}}\\r\\n            <div *ngIf=\\\"bill.group!=null\\\">\\r\\n              Added in : {{bill.group.name}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div *ngFor=\\\"let member of bill.sharedwiths\\\">\\r\\n              {{member.name}}\\r\\n              <label style=\\\"font-weight:normal\\\" *ngFor=\\\"let memberP of bill.payers\\\">\\r\\n                <label style=\\\"font-weight:normal\\\" *ngIf=\\\"member.id==memberP.id\\\">\\r\\n                  paid {{ memberP.amount | currency:'INR'}} and &nbsp;\\r\\n                </label>\\r\\n              </label>\\r\\n              <label style=\\\"font-weight:normal\\\">\\r\\n                owes {{member.amount | currency:'INR'}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--</div>-->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-4\\\">\\r\\n    <br />\\r\\n    <h4 style=\\\"color:gray\\\">YOUR TOTAL BALANCE</h4>\\r\\n    <br />\\r\\n    <div *ngIf=\\\"total<0\\\" style=\\\"color:red\\\">\\r\\n      <div style=\\\"font-size:large\\\">You owe</div>\\r\\n      <div style=\\\"font-size:x-large\\\">{{0-(total) | currency:'INR'}}</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"total>0\\\" style=\\\"color:green\\\">\\r\\n      <div style=\\\"font-size:large\\\">You are owed</div>\\r\\n      <div style=\\\"font-size:x-large\\\">{{total | currency:'INR'}}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../Services/UserService';\r\nimport { BillService } from '../Services/BillService';\r\nimport { TransactionGetResponse, BillGetResponse, GetSettlementResponse } from '../Models/Model';\r\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.component.html',\n  styleUrls: ['./expense.component.css']\n})\nexport class ExpenseComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private user_service: UserService, private bill_service: BillService) { }\n  userid: number;\n  transactions: TransactionGetResponse[];\n  bills: BillGetResponse[];\n  allUserSettlement: GetSettlementResponse[];\n  total: number = 0;\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\r\n      this.userid = params['id']\n    });\n    this.bill_service.getUserExpenseTransaction(this.userid)\n      .subscribe((data: TransactionGetResponse[]) => this.transactions = data);\n\n    this.bill_service.getUserBills(this.userid)\n      .subscribe((data: BillGetResponse[]) => this.bills = data);\n\n    this.bill_service.getUserSettlements(this.userid)\n      .subscribe((data: GetSettlementResponse[]) => {\n        this.allUserSettlement = data;\r\n        for (var i = 0; i < this.allUserSettlement.length; i++) {\r\n          if (this.allUserSettlement[i].payee.id == this.userid) {\r\n            this.total = this.total + this.allUserSettlement[i].amount;\r\n          }\r\n          else if (this.allUserSettlement[i].payer.id == this.userid) {\r\n            this.total = this.total - this.allUserSettlement[i].amount;\r\n          }\r\n        }\r\n        console.log(this.total);\r\n      });\n  }\n\n}\n","module.exports = \".full{\\r\\n  height:500px;\\r\\n}\\r\\ndiv.navbar{\\r\\n  background-color:lightgray;\\r\\n  color:grey;\\r\\n  height:75px;\\r\\n}\\r\\ndiv.navbar1{\\r\\n  background-color:lightgray;\\r\\n  color:white;\\r\\n  height:50px;\\r\\n  position:relative;\\r\\n}\\r\\n.design{\\r\\n  align-content:center;\\r\\n}\\r\\n.design1{\\r\\n  vertical-align:middle;\\r\\n  text-align:center;\\r\\n}\\r\\nlabel.nav-link{\\r\\n  border-color:black;\\r\\n  background-color:whitesmoke;\\r\\n  color:grey\\r\\n}\\r\\ndiv.billNav{\\r\\n  background-color:whitesmoke;\\r\\n}\\r\\nlabel.billNav1.nav-link:hover{\\r\\n  background-color:lightgray;\\r\\n}\\r\\nlabel.nav-link:hover{\\r\\n  background-color:lightgray;\\r\\n  color:black;\\r\\n}\\r\\n.myscroll.modal-body {\\r\\n  min-height:initial;\\r\\n  max-height:300px;\\r\\n  overflow-y:scroll;\\r\\n}\\r\\n.modal{\\r\\n  position:fixed;\\r\\n  right:100px;\\r\\n}\\r\\n.payer.modal.fade:not(.in) .modal-dialog{\\r\\n    -webkit-transform: translate3d(-25%, 0, 0);\\r\\n    transform: translate3d(-25%, 0, 0);\\r\\n}\\r\\n.payer{\\r\\n  left:700px;\\r\\n}\\r\\n.modal-content{\\r\\n  width:300px;\\r\\n}\\r\\n.modal-header{\\r\\n  background-color:grey;\\r\\n  color:white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row full\\\">\\r\\n  <div class=\\\"col-lg-8 border-right\\\">\\r\\n    <div class=\\\"navbar navbar-expand-sm\\\">\\r\\n      <h3>{{ friend.user_name}}</h3>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" style=\\\"position:absolute;left:600px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#FriendBillModal\\\">Add Bill</button>\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"FriendBillModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add Bill with {{ friend.user_name }}</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form class=\\\"form\\\" #myform=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"addBill.description\\\" placeholder=\\\"Description\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon\\\" style=\\\"font-size:large\\\">&#8377;</i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"addBill.total_amount\\\" placeholder=\\\"00.00\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"addBill.bill_date\\\" placeholder=\\\"MM-DDD-YY\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                  Paid By\\r\\n                  <a role=\\\"button\\\" style=\\\"background-color:lightgray;border-radius:5px;font-weight:bold;min-height:10px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#FriendBillPayer\\\">\\r\\n                    {{ paidby }}\\r\\n                  </a>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" (click)=\\\"AddBillData()\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!myform.valid\\\">Add</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"FriendBillPayer\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Choose Payer</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closePayerModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body myscroll\\\">\\r\\n              <div class=\\\"payerlist\\\">\\r\\n                <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" (click)=\\\"addSinglePayer(friend.userid)\\\">\\r\\n                  {{ friend.user_name }}\\r\\n                </label>\\r\\n                <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" (click)=\\\"addSinglePayer(user.userid)\\\">\\r\\n                  {{ user.user_name }}\\r\\n                </label>\\r\\n                <label class=\\\"nav-link\\\" (click)=\\\"showpayer()\\\">\\r\\n                  Multiple Payers\\r\\n                </label>\\r\\n                <div *ngIf=\\\"showPayer\\\">\\r\\n                  <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\">\\r\\n                    {{ friend.user_name }}\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon\\\" style=\\\"font-size:large\\\">&#8377;</i></span>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"friendPay\\\" placeholder=\\\"0.00\\\" />\\r\\n                    </div>\\r\\n                  </label>\\r\\n                  <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\">\\r\\n                    {{ user.user_name }}\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon\\\" style=\\\"font-size:large\\\">&#8377;</i></span>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userPay\\\" placeholder=\\\"0.00\\\" />\\r\\n                    </div>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"billNav\\\">\\r\\n      <!--<div class=\\\"panel-group\\\">-->\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n        <div class=\\\"number\\\">31</div>\\r\\n        </div>-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-11\\\">\\r\\n              <label class=\\\"panel-title\\\">\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#set\\\"  style=\\\"color:grey\\\">Settlements</a>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div id=\\\"set\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"transactions && transactions.length\\\">\\r\\n\\r\\n            <div class=\\\"billNav\\\" *ngFor=\\\"let settle of transactions\\\">\\r\\n              <!--<div class=\\\"panel-group\\\">-->\\r\\n              <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n          <div class=\\\"number\\\">31</div>\\r\\n          </div>-->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-1 design1\\\">\\r\\n                      {{ settle.paid_on | date:'MMM'}}\\r\\n                      <div class=\\\"design\\\">\\r\\n                        {{ settle.paid_on | date:'dd'}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-11\\\">\\r\\n                      <label class=\\\"panel-title\\\" style=\\\"font-weight:normal\\\">\\r\\n                        {{settle.payerId.name }} paid {{settle.payeeId.name}}  {{settle.paid_amount | currency:'INR'}}\\r\\n                      </label>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <!--<div id=\\\"\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body border-bottom\\\">\\r\\n            <br />\\r\\n           fjklf\\r\\n          </div>\\r\\n\\r\\n        </div>-->\\r\\n                <!--</div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"!transactions || !transactions.length\\\">\\r\\n            No settlement exist\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"billNav\\\" *ngFor=\\\"let bill of bills\\\">\\r\\n              <!--<div class=\\\"panel-group\\\">-->\\r\\n              <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n                <div class=\\\"number\\\">31</div>\\r\\n                </div>-->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-1 design\\\">\\r\\n                      {{ bill.bill_created_at | date:'MMM'}}\\r\\n                      <div class=\\\"design\\\">\\r\\n                        {{ bill.bill_created_at | date:'dd'}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-7\\\">\\r\\n                      <label class=\\\"panel-title\\\" style=\\\"color:grey\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" href=\\\"#{{bill.billid}}\\\">{{bill.description}}</a>\\r\\n                      </label>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"col-lg-4\\\">\\r\\n                      <div class=\\\"col-lg-6 design\\\">\\r\\n                        Paid by\\r\\n                        <div class=\\\"design\\\">\\r\\n                          0000\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-lg-6 design\\\">\\r\\n                        lent\\r\\n                        <div class=\\\"design\\\">\\r\\n                          0000\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>-->\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div id=\\\"{{bill.billid}}\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                  <div class=\\\"panel-body border-bottom\\\">\\r\\n                    {{bill.description}}\\r\\n                    <br />\\r\\n                    <h4>{{bill.total_amount | currency:'INR'}}</h4>\\r\\n                    Added by {{ bill.bill_created_by.name}}\\r\\n                    on {{bill.bill_created_at | date:'MMMM'}} {{bill.bill_created_at | date:'dd'}},\\r\\n                    {{bill.bill_created_at | date:'yyyy'}}\\r\\n                    <div *ngIf=\\\"bill.group!=null\\\">\\r\\n                      Added in : {{bill.group.name}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"panel-body\\\">\\r\\n                    <div *ngFor=\\\"let member of bill.sharedwiths\\\">\\r\\n                      {{member.name}}\\r\\n                      <label style=\\\"font-weight:normal\\\" *ngFor=\\\"let memberP of bill.payers\\\">\\r\\n                        <label style=\\\"font-weight:normal\\\" *ngIf=\\\"member.id==memberP.id\\\">\\r\\n                          paid {{ memberP.amount | currency:'INR'}} and &nbsp;\\r\\n                        </label>\\r\\n                      </label>\\r\\n                      <label style=\\\"font-weight:normal\\\">\\r\\n                        owes {{member.amount | currency:'INR'}}\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!--</div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn\\\" style=\\\"background-color:powderblue\\\" (click)=\\\"delete()\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-trash\\\"></span> Delete Friend\\r\\n      </button>\\r\\n      <!--<button type=\\\"button\\\" class=\\\"btn\\\" style=\\\"background-color:powderblue;position:relative;left:10px\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span>\\r\\n      </button>-->\\r\\n      <br /><br />\\r\\n      <div>\\r\\n        <h4>\\r\\n          Balance\\r\\n        </h4>\\r\\n        <div>\\r\\n          <div *ngIf=\\\"balance>0\\\" style=\\\"color:green;font-weight:normal\\\">\\r\\n            {{friend.user_name}} owes you\\r\\n            <div *ngIf=\\\"showBalance!=null && showBalance!=0\\\" style=\\\"font-size:x-large\\\">{{ showBalance | currency:'INR'}}</div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"balance<0\\\" style=\\\"color:red;font-weight:normal\\\">\\r\\n            you owe {{ friend.user_name }}\\r\\n            <div *ngIf=\\\"showBalance!=null && showBalance!=0\\\" style=\\\"font-size:x-large\\\">{{ showBalance | currency:'INR'}}</div>\\r\\n          </div>\\r\\n\\r\\n          <h4 *ngIf=\\\"showBalance==0\\\">You are settled up</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <h4>\\r\\n          Details\\r\\n        </h4>\\r\\n        <ul *ngFor=\\\"let detail of details\\\">\\r\\n          <li *ngIf=\\\"detail.id==0\\\" style=\\\"color:red\\\">\\r\\n            {{detail.detail}}\\r\\n          </li>\\r\\n          <li *ngIf=\\\"detail.id==1\\\" style=\\\"color:green\\\">\\r\\n            {{detail.detail}}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FriendService } from '../Services/FriendService';\r\nimport { FriendResponse, CommonResponse, User, BillResponse, PayerResponse, SharedWithResponse, SettlementResponse, BillGetResponse, GetSettlementResponse, CreateGroupResponse, TransactionResponse, GroupBalanceDetail, GroupResponse, TransactionGetResponse } from '../Models/Model';\r\nimport { UserService } from '../Services/UserService';\r\nimport { BillService } from '../Services/BillService';\r\nimport { GroupService } from '../Services/GroupService';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\n\n@Component({\n  selector: 'app-friend-board',\n  templateUrl: './friend-board.component.html',\n  styleUrls: ['./friend-board.component.css']\n})\n\n\n\nexport class FriendBoardComponent implements OnInit {\n  @ViewChild('closeModal') closeModal: ElementRef;\r\n  @ViewChild('closePayerModal') closePayerModal: ElementRef;\r\n\n  constructor(private route: ActivatedRoute, private user_service: UserService, private group_service: GroupService,\n    private bill_service: BillService, private router: Router, private friend_service: FriendService) { }\n  id: number;\n  userid: number;\n  showPayer: boolean = false;\n  paidby: any;\n  bills: BillGetResponse[];\n\n  public addBill = new BillResponse();\n\n  public payer = new PayerResponse();\n  payers = new Array<PayerResponse>();\n\n  public shareMember = new SharedWithResponse();\n  shareMembers = new Array<SharedWithResponse>();\n\n  public settlement = new SettlementResponse();\n  settlements = new Array<SettlementResponse>();\n\n  frdSettlement: GetSettlementResponse[];\n  balance: number = 0;\n  showBalance: number;\n\n  details = new Array<GroupBalanceDetail>();\n  detail = new GroupBalanceDetail();\n\n  friendPay: number;\n  userPay: number;\n  my_date: any;\n\n  public friend = new FriendResponse();\n  public user = new User();\n\n  transactions: TransactionGetResponse[];\n\n\n  ngOnInit() {\n\n    this.paidby = \"Select Payer\";\n\n    this.id = this.route.snapshot.params['frdid'];\n    this.route.parent.params.subscribe(params => {\r\n      this.userid = params['id']\n    });\n    this.friend_service.getFriendData(this.id).subscribe((data: FriendResponse) => {\n      //  console.log(data),\r\n      this.friend = data\r\n    });\n\n    this.user_service.getUserData(this.userid)\n      .subscribe((data: User) => this.user = data);\n\n    this.bill_service.getFriendBills(this.userid, this.id).subscribe((data: BillGetResponse[]) => {\n      this.bills = data,\r\n      //this.bills = this.bills.sort((a) => (a as any));\r\n        console.log(this.bills)\r\n    });\n\n    this.bill_service.getFriendTransactions(this.userid, this.id)\n      .subscribe((data: TransactionGetResponse[]) => {\n        this.transactions = data,\r\n          console.log(this.transactions);\r\n      });\n\n    this.bill_service.getFriendSettlements(this.userid, this.id)\n      .subscribe((data: GetSettlementResponse[]) => {\n        this.frdSettlement = data,\n          console.log(this.frdSettlement);\n        for (var i = 0; i < this.frdSettlement.length; i++) {\n\n          if (this.userid == this.frdSettlement[i].payer.id) {\r\n            this.detail = new GroupBalanceDetail();\r\n            this.detail.detail = \"You owe \" + this.frdSettlement[i].payee.name + \" ₹\" + this.frdSettlement[i].amount;\r\n            if (this.frdSettlement[i].group == null) {\r\n              this.detail.detail = this.detail.detail + \" for \" + \"'\" + \"Non Group Expense\" + \"'\";\r\n            }\r\n            else {\r\n              this.detail.detail = this.detail.detail + \" for \" + \"'\" + this.frdSettlement[i].group.name + \"'\";\r\n            }\r\n            this.detail.id = 0;\r\n            this.details.push(this.detail);\r\n            this.balance = this.balance - this.frdSettlement[i].amount;\r\n\r\n          }\r\n          if (this.userid == this.frdSettlement[i].payee.id) {\r\n            this.detail = new GroupBalanceDetail();\r\n            this.detail.detail = this.frdSettlement[i].payer.name + \" owes you ₹\" + this.frdSettlement[i].amount;\r\n            if (this.frdSettlement[i].group == null) {\r\n              this.detail.detail = this.detail.detail + \" for \" + \"'\" + \"Non Group Expense\" + \"'\";\r\n            }\r\n            else {\r\n              this.detail.detail = this.detail.detail + \" for \" + \"'\" + this.frdSettlement[i].group.name + \"'\";\r\n            }\r\n            this.detail.id = 1;\r\n            this.details.push(this.detail);\r\n            this.balance = this.balance + this.frdSettlement[i].amount;\r\n          }\r\n        }\n        if (this.balance < 0)\n          this.showBalance = 0 - this.balance;\n        else\n          this.showBalance = this.balance;\n        console.log(this.balance);\n        console.log(this.details);\n      });\n  }\n\n\n\n\n\n\n\n  delete() {\n    if (confirm(\"Are you sure you want to remove this friend\")) {\r\n      this.group_service.getFriendGroups(this.userid, this.id)\r\n        .subscribe((data: GroupResponse[]) => {\r\n          if (data.length > 0) {\r\n            alert(\"you this friend in group. so you cannot remove friend\");\r\n          }\r\n          else {\r\n            this.friend_service.removeFriend(this.userid, this.id)\r\n              .subscribe((data: CommonResponse) => {\r\n                console.log(data),\r\n                  alert(\"Delete Successfull\"),\r\n                  this.router.navigate(['/Board', this.userid])\r\n              },\r\n                error => alert(\"cannot delete friend\"));\r\n          }\r\n        });\r\n    }\r\n\r\n  }\n  showpayer() {\n    this.paidby = \"multiple\"\n    if (this.showPayer == false)\r\n      this.showPayer = true;\r\n    else\r\n      this.showPayer = false;\r\n    this.payer = new PayerResponse();\r\n\r\n  }\n\n  addSinglePayer(id) {\n    this.payer = new PayerResponse();\n    this.payers = new Array<PayerResponse>();\n    this.payer.paid_byId = id;\r\n    this.payer.amount_paid = this.addBill.total_amount;\r\n    this.user_service.getUserData(this.payer.paid_byId).subscribe(\r\n      (data: User) => this.paidby = data.user_name\r\n    );\r\n  }\n\n  AddBillData() {\n    if (this.payer.paid_byId == null) {\n      alert(\"Please select payer\");\r\n    }\n    else {\n      this.my_date = new Date().toLocaleString();\n      this.addBill.bill_created_at = this.my_date;\n      this.addBill.bill_created_byId = this.userid;\n      this.addBill.bill_updated_at = this.my_date;\n      this.addBill.bill_updated_byId = this.userid;\r\n\n      console.log(this.friendPay);\r\n      console.log(this.userPay);\r\n\r\n\r\n\r\n      if (this.friendPay != null) {\r\n        this.payer = new PayerResponse();\n        this.payer.paid_byId = this.id;\r\n        this.payer.amount_paid = this.friendPay;\r\n        this.payers.push(this.payer);\r\n      }\r\n      if (this.userPay != null) {\r\n        this.payer = new PayerResponse();\n        this.payer.paid_byId = this.userid;\r\n        this.payer.amount_paid = this.userPay;\r\n        this.payers.push(this.payer);\r\n      }\r\n\r\n\r\n      if (this.payers.length == 0) {\n        this.payers.push(this.payer);\r\n      }\r\n\r\n\r\n      var div = Number.parseFloat((this.addBill.total_amount / 2).toFixed(2));\n      // div = Math.round(div);\n\n      this.shareMember = new SharedWithResponse();\r\n      this.shareMember.owes_amount = div;\r\n      this.shareMember.shared_withId = this.id;\r\n      this.shareMembers.push(this.shareMember);\r\n\r\n      this.shareMember = new SharedWithResponse();\r\n      this.shareMember.owes_amount = div;\r\n      this.shareMember.shared_withId = this.userid;\r\n      this.shareMembers.push(this.shareMember);\r\n\n      if (this.payers.length == 1) {\n        var payee = this.payer.paid_byId;\r\n        for (var i = 0; i < this.shareMembers.length; i++) {\r\n          if (payee != this.shareMembers[i].shared_withId) {\r\n            var payer = this.shareMembers[i].shared_withId;\r\n            var amt = this.shareMembers[i].owes_amount;\r\n            this.settlement = new SettlementResponse();\r\n            this.settlement.payeeId = payee;\r\n            this.settlement.payerId = payer;\r\n            this.settlement.paid_amount = amt;\r\n            this.settlement.groupId = this.id;\r\n            if (this.settlement.paid_amount != 0)\r\n              this.settlements.push(this.settlement);\r\n          }\r\n        }\r\n      }\n      else {\n        if (this.payers[0].amount_paid > div) {\r\n          this.settlement = new SettlementResponse();\r\n          this.settlement.payeeId = this.payers[0].paid_byId;\r\n          this.settlement.payerId = this.payers[1].paid_byId;\r\n          this.settlement.paid_amount = this.payers[0].amount_paid - div;\r\n          if (this.settlement.paid_amount != 0)\r\n            this.settlements.push(this.settlement);\r\n        }\r\n        else {\r\n          this.settlement = new SettlementResponse();\r\n          this.settlement.payeeId = this.payers[1].paid_byId;\r\n          this.settlement.payerId = this.payers[0].paid_byId;\r\n          this.settlement.paid_amount = this.payers[1].amount_paid - div;\r\n          if (this.settlement.paid_amount != 0)\r\n            this.settlements.push(this.settlement);\r\n        }\r\n      }\n\n\n      this.addBill.payers = this.payers;\n      this.addBill.sharedwiths = this.shareMembers;\r\n      this.addBill.settlements = this.settlements;\r\n\r\n\r\n\r\n      console.log(this.addBill);\r\n\r\n      this.bill_service.addNewBill(this.addBill)\r\n        .subscribe((data: CommonResponse) => {\r\n          if (data.status == true) {\r\n            alert(\"Bill Added Successfully\")\r\n          }\r\n          else (\"Failed to add the bill\")\r\n        });\n      this.closeModal.nativeElement.click();\r\n      this.closePayerModal.nativeElement.click();\r\n\r\n    }\n    \n  }\n}\n","module.exports = \".row.full{\\r\\n  height:500px;\\r\\n}\\r\\n/*.billHead{\\r\\n  position:relative;\\r\\n  left:16px;\\r\\n  width:700px;\\r\\n}*/\\r\\ndiv.navbar{\\r\\n  background-color:lightgray;\\r\\n  color:grey;\\r\\n  height:75px;\\r\\n}\\r\\ndiv.navbar1{\\r\\n  background-color:lightgray;\\r\\n  color:white;\\r\\n  height:50px;\\r\\n  position:relative;\\r\\n}\\r\\ndiv.billNav{\\r\\n  background-color:whitesmoke;\\r\\n}\\r\\n/*label.billNav1.nav-link:hover{\\r\\n  background-color:lightgray;\\r\\n}*/\\r\\n.design{\\r\\n  vertical-align:middle;\\r\\n  text-align:center;\\r\\n}\\r\\n.form-control{\\r\\n  width:200px;\\r\\n}\\r\\n.myscroll {\\r\\n  min-height:initial;\\r\\n  max-height:300px;\\r\\n  overflow-y:scroll;\\r\\n}\\r\\nlabel.nav-link{\\r\\n  border-color:black;\\r\\n  background-color:whitesmoke;\\r\\n  color:grey\\r\\n}\\r\\nlabel.nav-link:hover{\\r\\n  background-color:lightgray;\\r\\n  color:black;\\r\\n}\\r\\nlabel.nav-link:active{\\r\\n  background-color:gray;\\r\\n  color:black;\\r\\n}\\r\\n.modal{\\r\\n  position:fixed;\\r\\n  right:100px;\\r\\n}\\r\\n.payer.modal.fade:not(.in) .modal-dialog{\\r\\n    -webkit-transform: translate3d(-25%, 0, 0);\\r\\n    transform: translate3d(-25%, 0, 0);\\r\\n}\\r\\n.payer{\\r\\n  left:700px;\\r\\n}\\r\\n.modal-content.balance{\\r\\n  height:400px;\\r\\n  width:600px;\\r\\n}\\r\\n.modal-content{\\r\\n  width:300px;\\r\\n}\\r\\n.modal-header{\\r\\n  background-color:grey;\\r\\n  color:white;\\r\\n}\\r\\n/*.container1{\\r\\n  position:relative;\\r\\n  top:20px;\\r\\n  padding-left:10px;\\r\\n  width:250px;\\r\\n  height:300px;\\r\\n  background-color:whitesmoke;\\r\\n  overflow-y:scroll;\\r\\n}*/\\r\\n.table{\\r\\n  width:150px;\\r\\n}\\r\\n.switch {\\r\\n  position: relative;\\r\\n  top:12px;\\r\\n  left:10px;\\r\\n  display: inline-block;\\r\\n  width: 50px;\\r\\n  height: 27px;\\r\\n}\\r\\n/* Hide default HTML checkbox */\\r\\n.switch input {display:none;}\\r\\n/* The slider */\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc;\\r\\n  transition: .4s;\\r\\n}\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 20px;\\r\\n  width: 20px;\\r\\n  left: 4px;\\r\\n  bottom: 4px;\\r\\n  background-color: white;\\r\\n  transition: .4s;\\r\\n}\\r\\ninput:checked + .slider {\\r\\n  background-color: #2196F3;\\r\\n}\\r\\ninput:focus + .slider {\\r\\n  box-shadow: 0 0 1px #2196F3;\\r\\n}\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(26px);\\r\\n  transform: translateX(26px);\\r\\n}\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n  border-radius: 34px;\\r\\n}\\r\\n.slider.round:before {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row full\\\">\\r\\n\\r\\n  <div class=\\\"col-lg-8 border-right\\\">\\r\\n    <div class=\\\"navbar navbar-expand-sm\\\">\\r\\n      <h3>{{ group.group_name }}</h3>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#GroupBillModal\\\" style=\\\"position:absolute;left:600px\\\">Add Bill</button>\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"GroupBillModal\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add Bill with {{ group.group_name }}</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form class=\\\"form\\\" #myform=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"addBill.description\\\" placeholder=\\\"Description\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-usd\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"addBill.total_amount\\\" placeholder=\\\"00.00\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"date\\\" [(ngModel)]=\\\"addBill.bill_date\\\" placeholder=\\\"MM-DD-YY\\\" required/>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                  Paid By\\r\\n                  <a role=\\\"button\\\" style=\\\"background-color:lightgray;border-radius:5px;font-weight:bold;min-height:10px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#GroupBillPayer\\\">{{ paidby }}</a>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" (click)=\\\"AddBillData()\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!myform.valid\\\">Add</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal fade payer\\\" id=\\\"GroupBillPayer\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Choose Payer</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closePayerModal>&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body myscroll\\\">\\r\\n              <div class=\\\"payerlist\\\">\\r\\n                <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" *ngFor=\\\"let member of group.memberLists\\\" (click)=\\\"addSinglePayer(member.id)\\\">\\r\\n                  {{ member.name }}\\r\\n                </label>\\r\\n                <label class=\\\"nav-link\\\" (click)=\\\"showpayer()\\\">\\r\\n                  Multiple Payers\\r\\n                </label>\\r\\n                <div *ngIf=\\\"showPayer\\\">\\r\\n                  <label class=\\\"nav-link\\\" style=\\\"font-weight:normal\\\" *ngFor=\\\"let member of group.memberLists\\\">\\r\\n                    {{ member.name }}\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-usd\\\"></i></span>\\r\\n                      <input type=\\\"text\\\" #amt class=\\\"form-control\\\" placeholder=\\\"0.00\\\" />\\r\\n                    </div>\\r\\n                    <a (click)=\\\"addpayer(member.id,amt.value)\\\">Add</a>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"billNav\\\">\\r\\n      <!--<div class=\\\"panel-group\\\">-->\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n         \\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-11\\\">\\r\\n              <label class=\\\"panel-title\\\" style=\\\"color:grey\\\">\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#set\\\">Settlements</a>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div id=\\\"set\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"transactions && transactions.length\\\">\\r\\n\\r\\n            <div class=\\\"billNav\\\" *ngFor=\\\"let settle of transactions\\\">\\r\\n              <!--<div class=\\\"panel-group\\\">-->\\r\\n              <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n          <div class=\\\"number\\\">31</div>\\r\\n          </div>-->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-1 design1\\\">\\r\\n                      {{ settle.paid_on | date:'MMM'}}\\r\\n                      <div class=\\\"design\\\">\\r\\n                        {{ settle.paid_on | date:'dd'}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-11\\\">\\r\\n                      <label class=\\\"panel-title\\\" style=\\\"font-weight:normal\\\">\\r\\n                        {{settle.payerId.name }} paid {{settle.payeeId.name}} &#8377;{{settle.paid_amount}}\\r\\n                      </label>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <!--<div id=\\\"\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body border-bottom\\\">\\r\\n            <br />\\r\\n           fjklf\\r\\n          </div>\\r\\n\\r\\n        </div>-->\\r\\n                <!--</div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\" *ngIf=\\\"!transactions || !transactions.length\\\">\\r\\n            No settlement exist\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"billNav\\\" *ngFor=\\\"let bill of bills\\\">\\r\\n      <!--<div class=\\\"panel-group\\\">-->\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <!--<div class=\\\"date\\\"> \\\"Aug\\\"\\r\\n        <div class=\\\"number\\\">31</div>\\r\\n        </div>-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-1 design\\\">\\r\\n              {{ bill.bill_created_at | date:'MMM'}}\\r\\n              <div class=\\\"design\\\">\\r\\n                {{ bill.bill_created_at | date:'dd'}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <label class=\\\"panel-title\\\" style=\\\"color:grey\\\">\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#{{bill.billid}}\\\">{{bill.description}}</a>\\r\\n              </label>\\r\\n            </div>\\r\\n            <!--<div class=\\\"col-lg-5\\\">\\r\\n              <div class=\\\"col-lg-6 design\\\">\\r\\n                <label style=\\\"font-size:smaller;font-weight:normal\\\">\\r\\n                  {{bill.payers.length | number}} people  Paid\\r\\n                </label>   \\r\\n                <div class=\\\"design\\\">\\r\\n                  {{bill.total_amount}}\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6 design\\\">\\r\\n                lent\\r\\n                <div class=\\\"design\\\">\\r\\n                  0000\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>-->\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div id=\\\"{{bill.billid}}\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body border-bottom\\\">\\r\\n            {{bill.description}}\\r\\n            <br />\\r\\n            <h4> &#8377;{{bill.total_amount}}</h4>\\r\\n            Added by {{ bill.bill_created_by.name}}\\r\\n            on {{bill.bill_created_at | date:'MMMM'}} {{bill.bill_created_at | date:'dd'}},{{bill.bill_created_at | date:'yyyy'}}\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div *ngFor=\\\"let member of bill.sharedwiths\\\">\\r\\n              {{member.name}}\\r\\n              <label style=\\\"font-weight:normal\\\" *ngFor=\\\"let memberP of bill.payers\\\">\\r\\n                <label style=\\\"font-weight:normal\\\" *ngIf=\\\"member.id==memberP.id\\\">\\r\\n                  paid &#8377;{{ memberP.amount}} and &nbsp;\\r\\n                </label>\\r\\n              </label>\\r\\n              <label style=\\\"font-weight:normal\\\">\\r\\n                owes &#8377;{{member.amount}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--</div>-->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-lg-4\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" style=\\\"background-color:powderblue\\\" (click)=\\\"ShowBalance()\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-list-alt\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" style=\\\"background-color:powderblue;position:relative;left:10px\\\" (click)=\\\"ShowSetting()\\\">\\r\\n      Group Settings\\r\\n    </button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!--<div class=\\\"modal fade\\\" id=\\\"GroupSettingModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n       Modal content\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\"> {{ group.group_name }} Setting</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body myscroll\\\">\\r\\n\\r\\n          <div>\\r\\n            <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n\\r\\n              <label for=\\\"group_name\\\">Group name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"group_name\\\" [(ngModel)]=\\\"group.group_name\\\" /><br />\\r\\n              <label>Group Members</label>\\r\\n              <br />\\r\\n              <table class=\\\"table\\\">\\r\\n                <tbody *ngFor=\\\"let member of group.memberLists\\\">\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      {{ member.name }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <span class=\\\"glyphicon glyphicon-remove-circle\\\" (click)=\\\"remove(member.id)\\\" style=\\\"color:red\\\"></span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n\\r\\n              <label>Simplfy Group Depts</label>\\r\\n              <label class=\\\"switch\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"depth\\\" name=\\\"depth\\\" (change)=\\\"toggleEditable($event)\\\" checked=\\\"{{status}}\\\">\\r\\n                <span class=\\\"slider round\\\"></span>\\r\\n              </label>\\r\\n              <br /><br />\\r\\n              <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"showList()\\\">Add new member</button>\\r\\n              <br />\\r\\n              <div *ngIf=\\\"showlist\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                  <tbody *ngFor=\\\"let member of friends\\\">\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        {{ member.user_name }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <span class=\\\"glyphicon glyphicon-ok-circle\\\" style=\\\"color:green\\\" (click)=\\\"add(member.userid)\\\"></span>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <br />\\r\\n              <div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\" data-dismiss=\\\"modal\\\">Delete</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"position:relative; left:10px\\\" data-dismiss=\\\"modal\\\">Save</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" style=\\\"position:relative;left:20px\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n\\r\\n    <br /><br />\\r\\n\\r\\n    <div *ngIf=\\\"showSettings\\\">\\r\\n      <h4>Group Settings</h4>\\r\\n      <div>\\r\\n        <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n\\r\\n          <label for=\\\"group_name\\\">Group name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"group_name\\\" [(ngModel)]=\\\"group.group_name\\\" /><br />\\r\\n          <label>Group Members</label>\\r\\n          <br />\\r\\n          <table class=\\\"table\\\">\\r\\n            <tbody *ngFor=\\\"let member of group.memberLists\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  {{ member.name }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  <span class=\\\"glyphicon glyphicon-remove-circle\\\" (click)=\\\"remove(member.id)\\\" style=\\\"color:red\\\"></span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n          <label>Simplfy Group Depts</label>\\r\\n          <label class=\\\"switch\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"depth\\\" name=\\\"depth\\\" (change)=\\\"toggleEditable($event)\\\" checked=\\\"{{status}}\\\">\\r\\n            <span class=\\\"slider round\\\"></span>\\r\\n          </label>\\r\\n          <br /><br />\\r\\n          <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"showList()\\\">Add new member</button>\\r\\n          <br />\\r\\n          <br />\\r\\n          <div *ngIf=\\\"showlist\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <tbody *ngFor=\\\"let member of nonGroupFriends\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    {{ member.user_name }}\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <span class=\\\"glyphicon glyphicon-ok-circle\\\" style=\\\"color:green\\\" (click)=\\\"add(member.userid)\\\"></span>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"position:relative; left:10px\\\">Save</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"showBalance\\\">\\r\\n      <h4>\\r\\n        Group Balance\\r\\n      </h4>\\r\\n      <div *ngFor=\\\"let member of group.memberLists\\\">\\r\\n        <label style=\\\"color:gray;font-size:medium\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"color:grey\\\"></span>\\r\\n          {{ member.name }}\\r\\n        </label>\\r\\n        <br />\\r\\n        <div *ngFor=\\\"let balance of groupBalance\\\">\\r\\n          <div *ngIf=\\\"member.id==balance.member.id\\\">\\r\\n            <label *ngIf=\\\"balance.status=='gets'\\\" style=\\\"color:green;font-weight:normal\\\">\\r\\n              {{ balance.status }}\\r\\n              &#8377;{{balance.amt}}\\r\\n            </label>\\r\\n            <label *ngIf=\\\"balance.status=='owes'\\\" style=\\\"color:red;font-weight:normal\\\">\\r\\n              {{ balance.status }}\\r\\n              &#8377;{{balance.amt}}\\r\\n            </label>\\r\\n            <label *ngIf=\\\"balance.status=='settled'\\\" style=\\\"color:gray;font-weight:normal\\\">\\r\\n              {{ balance.status }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <a data-toggle=\\\"modal\\\" data-target=\\\"#GroupSettlementDetail\\\">\\r\\n        Detail\\r\\n      </a>\\r\\n    </div>\\r\\n    <div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"GroupSettlementDetail\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content balance\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Group Balances</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body myscroll\\\">\\r\\n              <div class=\\\"row nav-link\\\" *ngFor=\\\"let member of group.memberLists\\\">\\r\\n                <div class=\\\"col-lg-4 nav-item\\\">\\r\\n                  <label style=\\\"color:gray;font-size:medium\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"color:grey\\\"></span>\\r\\n                    {{ member.name }}\\r\\n                  </label>\\r\\n                  <br />\\r\\n                  <div *ngFor=\\\"let balance of groupBalance\\\">\\r\\n                    <div *ngIf=\\\"member.id==balance.member.id\\\">\\r\\n                      <label *ngIf=\\\"balance.status=='gets'\\\" style=\\\"color:green;font-weight:normal\\\">\\r\\n                        {{ balance.status }}\\r\\n                        &#8377;{{balance.amt}}\\r\\n                      </label>\\r\\n                      <label *ngIf=\\\"balance.status=='owes'\\\" style=\\\"color:red;font-weight:normal\\\">\\r\\n                        {{ balance.status }}\\r\\n                        &#8377;{{balance.amt}}\\r\\n                      </label>\\r\\n                      <label *ngIf=\\\"balance.status=='settled'\\\" style=\\\"color:gray;font-weight:normal\\\">\\r\\n                       {{ balance.status }}\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-8 nav-item\\\">\\r\\n                  <div *ngFor=\\\"let detail of details\\\">\\r\\n                    <ul *ngIf=\\\"detail.id==member.id\\\">\\r\\n                      <li style=\\\"color:grey\\\">{{ detail.detail }}</li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button class=\\\"btn\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n        </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../Services/GroupService';\r\nimport { GroupResponse, FriendResponse, Group, BillResponse, PayerResponse, SharedWithResponse, Bill, SettlementResponse, settle, User, BillGetResponse, GetSettlementResponse, GroupBalance, GroupBalanceDetail, Detail, TransactionGetResponse, CommonResponse, GroupMember } from '../Models/Model';\r\nimport { UserService } from '../Services/UserService';\r\nimport { BillService } from '../Services/BillService';\r\nimport { HubConnectionService } from '../Services/HubService';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\n\n@Component({\n  selector: 'app-group-board',\n  templateUrl: './group-board.component.html',\n  styleUrls: ['./group-board.component.css']\n})\nexport class GroupBoardComponent implements OnInit {\n\n  @ViewChild('closeModal') closeModal: ElementRef;\r\n  @ViewChild('closePayerModal') closePayerModal: ElementRef;\n\n\n  public grpmem = new GroupMember();\n  public grpmems = new Array<GroupMember>();\n\n  public remgrpmem = new GroupMember();\n  public remgrpmems = new Array<GroupMember>();\n\n  public group = new GroupResponse();\n  public newGroup = new Group();\n  friends: FriendResponse[];\n  nonGroupFriends:FriendResponse[];\n  public addBill = new BillResponse();\n\n  bills: BillGetResponse[];\n  public payer = new PayerResponse();\n  payers = new Array<PayerResponse>();\n\n  public shareMember = new SharedWithResponse();\n  shareMembers = new Array<SharedWithResponse>();\n\n  public settlement = new SettlementResponse();\n  settlements = new Array<SettlementResponse>();\n\n  GroupSettlements: GetSettlementResponse[];\n  groupBalance = new Array<GroupBalance>();\n  balance = new GroupBalance();\n  info = new Detail();\n\n  details = new Array<GroupBalanceDetail>();\n  detail = new GroupBalanceDetail();\n\n  paidby: any;\n  public sett = new settle();\n  //setts = new Array<settle>();\n\n  setPayers = new Array<settle>();\n  setShares = new Array<settle>();\n\n  showvarible: any = false;\n  showlist: any = false;\n  showPayer: boolean = false;\n  my_date: any;\n  userid: number;\n  id: number;\n  status: boolean;\n  isDepth: boolean;\n  amount: any = \"\";\n\n  showSettings: boolean= false;\n  showBalance: boolean = true;\n\n  showbill: boolean = false;\n\n  transactions: TransactionGetResponse[];\n\n  constructor(private route: ActivatedRoute, private router: Router, private service: HubConnectionService,\n    private bill_service: BillService, private group_service: GroupService, private user_service: UserService) { }\n\n  ngOnInit() {\n     this.id = this.route.snapshot.params['gpid'];\n//    console.log(id);\n\n    this.route.parent.params.subscribe(params => {\r\n      this.userid = params['id']\n    });\n\n    this.paidby = \"Select Payer\";\n    this.group_service.GetGroupInfo(this.id).subscribe(\n      (data: any) => {\n      //  console.log(data),\r\n          this.group = data;\n\n\n\n        if (this.group.is_simplified_depts == true) {\n          this.status = true;\r\n          this.isDepth = this.status;\r\n        }\n\n        this.bill_service.getGroupSettlement(this.userid, this.id)\n          .subscribe((data: GetSettlementResponse[]) => {\n            this.GroupSettlements = data,\r\n            //  console.log(this.GroupSettlements);\r\n\r\n            this.user_service.getFriends(this.userid).subscribe\n              ((data: FriendResponse[]) => {\n                this.friends = data,\n                  this.nonGroupFriends = data;\n\r\n            for (var i = 0; i < this.group.memberLists.length; i++) {\r\n\r\n              var place = this.nonGroupFriends.findIndex(c => c.userid == this.group.memberLists[i].id);\r\n             // console.log(place);\r\n              if (place >=0 ) {\r\n                this.nonGroupFriends.splice(place, 1);\r\n              }\r\n\r\n              this.balance = new GroupBalance();\r\n              this.info = new Detail();\r\n              this.info.id = this.group.memberLists[i].id;\r\n              this.info.name = this.group.memberLists[i].name;\r\n              this.balance.member = this.info;\r\n\r\n              this.balance.amt = 0;\r\n\r\n              for (var j = 0; j < this.GroupSettlements.length; j++) {\r\n\r\n                if (this.GroupSettlements[j].amount != 0) {\r\n\r\n                  if (this.group.memberLists[i].id == this.GroupSettlements[j].payer.id) {\r\n                    this.detail = new GroupBalanceDetail();\r\n                    this.detail.id = this.group.memberLists[i].id;\r\n                    this.detail.detail = this.group.memberLists[i].name + \" owes ₹\" +  this.GroupSettlements[j].amount\r\n                      + \" to \" + this.GroupSettlements[j].payee.name;\r\n                    this.details.push(this.detail);\r\n                    this.balance.amt = this.balance.amt - this.GroupSettlements[j].amount;\r\n\r\n                  }\r\n                  if (this.group.memberLists[i].id == this.GroupSettlements[j].payee.id) {\r\n                    this.detail = new GroupBalanceDetail();\r\n                    this.detail.id = this.group.memberLists[i].id;\r\n                    this.detail.detail = this.group.memberLists[i].name + \" owes \" + this.GroupSettlements[j].payer.name + \" ₹\" + this.GroupSettlements[j].amount;\r\n                    this.details.push(this.detail);\r\n                    this.balance.amt = this.balance.amt + this.GroupSettlements[j].amount;\r\n                  }\r\n                }\r\n\r\n               \r\n              }\r\n              if (this.balance.amt == 0)\r\n                this.balance.status = \"settled\";\r\n              else if (this.balance.amt < 0) {\r\n                this.balance.amt = 0 - this.balance.amt;\r\n                this.balance.status = \"owes\";\r\n\r\n              }\r\n              else\r\n                this.balance.status = \"gets\";\r\n              this.groupBalance.push(this.balance);\r\n\r\n            }\r\n          //  console.log(this.groupBalance);\r\n              // console.log(this.details);\n              console.log(this.nonGroupFriends);\n          });\n\n      });\n      });\r\n\n\n    this.bill_service.getGroupBills(this.id).subscribe((data: BillGetResponse[]) => {\n      this.bills = data,\r\n        console.log(this.bills)\r\n    });\n\n    this.bill_service.getGroupTransactions(this.id)\n      .subscribe((data: TransactionGetResponse[]) => this.transactions = data);\n   \n  }\n\n\n  toggleEditable(event) {\n    if (event.target.checked) {\n      this.isDepth = true;\n    }\n    else {\n      this.isDepth = false\n    }\n  }  \n\n  add(userid: number) {\n    this.grpmem = new GroupMember();\n    this.grpmem.userid = userid;\n    this.grpmem.groupid = this.id;\n    this.grpmems.push(this.grpmem);\n    //this.group_service.addGroupMember(userid, this.id).subscribe\r\n    //  (\r\n    //  data => {\r\n    //    console.log(data),\r\n    //      this.service.update();\r\n    //  });\r\n  }\n  remove(userid: number) {\n    this.remgrpmem = new GroupMember();\n    this.remgrpmem.userid = userid;\n    this.remgrpmem.groupid = this.id;\n    this.remgrpmems.push(this.remgrpmem);\n    //this.group_service.removeGroupMember(userid, this.id).subscribe\r\n    //  (data => { console.log(data), this.service.update() },\r\n    //  error => alert(\"member have pending settlements in group\"));\r\n  }\n\n  showList() {\n    if (this.showlist == false)\r\n      this.showlist = true;\r\n    else\r\n      this.showlist = false;\r\n  }\n\n  showpayer() {\n    this.paidby = \"multiple\"\n    if (this.showPayer == false)\r\n      this.showPayer = true;\r\n    else\r\n      this.showPayer = false;\r\n    this.payer = new PayerResponse();\r\n  }\n\n  showBill() {\n    if (this.showbill == false)\r\n      this.showbill = true;\r\n    else\r\n      this.showbill = false;\r\n  }\n\n  ShowSetting() {\n    this.showSettings = true;\r\n    this.showBalance = false;\r\n  }\n  ShowBalance() {\n    this.showBalance = true;\r\n    this.showSettings = false;\r\n  }\n\n  delete() {\n    if (confirm(\"Are you sure you want to delete this group\")) {\n      this.group_service.deleteGroup(this.id)\r\n        .subscribe((data: boolean) => {\r\n          console.log(data),\r\n            this.router.navigate(['/Board', this.userid])\r\n            },\r\n        error => alert(\"settlemets still exist\"));\r\n    }\n   \r\n  }\n\n  onSubmit() {\n    this.newGroup.groupid = this.id;\n    this.newGroup.group_name = this.group.group_name;\n    this.newGroup.group_created_by = this.group.group_created_by.id;\n    this.newGroup.is_simplified_depts = this.isDepth;\n    //console.log(this.newGroup);\n    //console.log(this.group);\r\n    //console.log(this.isDepth);\r\n    for (var i = 0; i < this.grpmems.length; i++) {\r\n      this.group_service.addGroupMember(this.grpmems[i].userid, this.grpmems[i].groupid).subscribe\r\n        (\r\n        data => {\r\n          console.log(data)\r\n            //this.service.update();\r\n        });\r\n    }\r\n    for (var i = 0; i < this.remgrpmems.length; i++) {\r\n      this.group_service.removeGroupMember(this.remgrpmems[i].userid, this.remgrpmems[i].groupid).subscribe\r\n      (data => { console.log(data), this.service.update() },\r\n      error => alert(\"member have pending settlements in group\"));\r\n    }\r\n    this.group_service.updateGroup(this.id, this.newGroup).subscribe(data => console.log(data));\r\n  }\n\n  addSinglePayer(id) {\n    this.payer = new PayerResponse();\n    this.payers = new Array<PayerResponse>();\n    this.payer.paid_byId = id;\r\n    this.payer.amount_paid = this.addBill.total_amount;\r\n    this.user_service.getUserData(this.payer.paid_byId).subscribe(\r\n      (data: User) => this.paidby = data.user_name\r\n    );\r\n  }\n\n  addpayer(id, amt) {\n    this.payer = new PayerResponse();\n    this.payer.paid_byId = id;\r\n    this.payer.amount_paid = amt;\r\n    this.payers.push(this.payer);\r\n\r\n  }\n \n  AddBillData() {\n    if (this.payer.paid_byId == null) {\n      alert(\"Please select payer\");\r\n    }\n    else {\n      this.my_date = new Date().toLocaleString();\n      this.addBill.bill_created_at = this.my_date;\n      this.addBill.bill_created_byId = this.userid;\n      this.addBill.bill_updated_at = this.my_date;\n      this.addBill.bill_updated_byId = this.userid;\n      this.addBill.groupId = this.id;\n      if (this.payers.length == 0) {\n        this.payers.push(this.payer);\r\n      }\n      var div = Number.parseFloat((this.addBill.total_amount / this.group.memberLists.length).toFixed(2));\n      // div = Math.round(div);\n      for (var i = 0; i < this.group.memberLists.length; i++) {\n        this.shareMember = new SharedWithResponse();\r\n        this.shareMember.owes_amount = div;\r\n        this.shareMember.shared_withId = this.group.memberLists[i].id;\r\n        this.shareMembers.push(this.shareMember);\r\n      }\n\n\n\n\n      if (this.payers.length == 1) {\n        var payee = this.payer.paid_byId;\r\n        for (var i = 0; i < this.shareMembers.length; i++) {\r\n          if (payee != this.shareMembers[i].shared_withId) {\r\n            var payer = this.shareMembers[i].shared_withId;\r\n            var amt = this.shareMembers[i].owes_amount;\r\n            this.settlement = new SettlementResponse();\r\n            this.settlement.payeeId = payee;\r\n            this.settlement.payerId = payer;\r\n            this.settlement.paid_amount = amt;\r\n            this.settlement.groupId = this.id;\r\n            if (this.settlement.paid_amount != 0)\r\n              this.settlements.push(this.settlement);\r\n          }\r\n        }\r\n      }\n      else {\n        for (var i = 0; i < this.shareMembers.length; i++) {\n          this.sett = new settle();\r\n\r\n          this.sett.id = this.shareMembers[i].shared_withId;\r\n          var amt = 0;\r\n          for (var j = 0; j < this.payers.length; j++) {\r\n            if (this.shareMembers[i].shared_withId === this.payers[j].paid_byId) {\r\n              if (this.payers[j].amount_paid == div) {\r\n                amt = 1;\r\n              }\r\n              else if (this.payers[j].amount_paid > div) {\r\n                amt = this.payers[j].amount_paid - div;\r\n                this.sett.amt = amt;\r\n                this.setPayers.push(this.sett);\r\n              }\r\n\r\n              else {\r\n                amt = this.shareMembers[i].owes_amount - this.payers[j].amount_paid;\r\n                this.sett.amt = amt;\r\n                this.setShares.push(this.sett);\r\n              }\r\n            }\r\n          }\r\n          if (amt == 0) {\r\n            this.sett.amt = this.shareMembers[i].owes_amount;\r\n            this.setShares.push(this.sett);\r\n          }\r\n        }\n\n        //console.log(this.setPayers);\n        //console.log(this.setShares);\n\n\n        if (this.setPayers.length > 1) {\n\n          if (this.setShares.length == 1) {\n            for (var i = 0; i < this.setPayers.length; i++) {\r\n              this.settlement = new SettlementResponse();\r\n              this.settlement.payerId = this.setShares[0].id;\r\n              this.settlement.payeeId = this.setPayers[i].id;\r\n              this.settlement.paid_amount = this.setPayers[i].amt;\r\n              this.settlement.groupId = this.id;\r\n              if (this.settlement.paid_amount != 0)\r\n                this.settlements.push(this.settlement);\r\n            }\r\n          }\n          else {\n            for (var i = 0; i < this.setShares.length; i++) {\n              var mem = this.setPayers.find(data => data.amt === this.setShares[i].amt);\r\n              var index = this.setPayers.findIndex(data => data.amt === this.setShares[i].amt);\r\n              //console.log(index);\r\n\r\n              if (mem != null) {\r\n                this.settlement = new SettlementResponse();\r\n                payer = this.setShares[i].id;\r\n                payee = mem.id;\r\n                amt = mem.amt;\r\n                this.setPayers[index].amt = this.setPayers[index].amt - amt;\r\n                this.settlement.payerId = payer;\r\n                this.settlement.payeeId = payee;\r\n                this.settlement.paid_amount = amt;\r\n                this.settlement.groupId = this.id;\r\n                if (this.settlement.paid_amount != 0)\r\n                  this.settlements.push(this.settlement);\r\n              }\r\n\r\n              else {\r\n                for (var j = 0; j < this.setPayers.length; j++) {\r\n                  if (this.setPayers[j].amt > this.setShares[i].amt) {\r\n                    this.settlement = new SettlementResponse();\r\n                    this.settlement.payerId = this.setShares[i].id;\r\n                    this.settlement.payeeId = this.setPayers[j].id;\r\n                    this.settlement.paid_amount = this.setShares[i].amt;\r\n                    this.setShares[i].amt = this.setShares[i].amt - this.settlement.paid_amount;\r\n                    this.setPayers[j].amt = this.setPayers[j].amt - this.settlement.paid_amount;\r\n                    this.settlement.groupId = this.id;\r\n                    if (this.settlement.paid_amount != 0)\r\n                      this.settlements.push(this.settlement);\r\n                  }\r\n                  else if (this.setPayers[j].amt > 0) {\r\n                    this.settlement = new SettlementResponse();\r\n                    this.settlement.payerId = this.setShares[i].id;\r\n                    this.settlement.payeeId = this.setPayers[j].id;\r\n                    this.settlement.paid_amount = this.setPayers[j].amt;\r\n                    this.setShares[i].amt = this.setShares[i].amt - this.settlement.paid_amount;\r\n                    this.setPayers[j].amt = this.setPayers[j].amt - this.settlement.paid_amount;\r\n                    this.settlement.groupId = this.id;\r\n                    if (this.settlement.paid_amount != 0)\r\n                      this.settlements.push(this.settlement);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\n        else if (this.setPayers.length == 1) {\n          for (var i = 0; i < this.setShares.length; i++) {\r\n            this.settlement = new SettlementResponse();\r\n            this.settlement.payerId = this.setShares[i].id;\r\n            this.settlement.payeeId = this.setPayers[0].id;\r\n            this.settlement.paid_amount = this.setShares[i].amt;\r\n            this.settlement.groupId = this.id;\r\n            if (this.settlement.paid_amount != 0)\r\n              this.settlements.push(this.settlement);\r\n          }\r\n        }\r\n\n\n        //console.log(this.setPayers);\n        //console.log(this.setShares);\n\r\n      }\n      this.addBill.payers = this.payers;\n      this.addBill.sharedwiths = this.shareMembers;\n      this.addBill.settlements = this.settlements;\n      console.log(this.addBill);\r\n      this.bill_service.addNewBill(this.addBill)\r\n        .subscribe((data: CommonResponse) => {\r\n          if (data.status == true) {\r\n            alert(\"Bill Added Successfully\")\r\n          }\r\n          else (\"Failed to add the bill\")\r\n        });\r\n      this.closeModal.nativeElement.click();\r\n      this.closePayerModal.nativeElement.click();\r\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"align-content:center\\\">\\r\\n  <img src=\\\"..\\\\assets\\\\download.png\\\" class=\\\"mx-auto d-block\\\"><img><br />\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" style=\\\"position:relative;left:575px\\\" [routerLink]=\\\"['/login']\\\">Login</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" style=\\\"position:relative;left:650px\\\" [routerLink]=\\\"['/register']\\\">SignUp</button>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n.container {\\n    background-color:whitesmoke;\\n    width:500px;\\n    align-content:center;\\n}\\n\"","module.exports = \"<div style=\\\"width:auto\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h3>Login to Your Account</h3>\\r\\n      <br>\\r\\n      <form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-envelope\\\"></i></span>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"user.email_id\\\" placeholder=\\\"Email-id\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-eye-open\\\"></i></span>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/home']\\\" style=\\\"position:relative;left:20px\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../Services/UserService';\r\nimport { User, CommonResponse } from '../Models/Model';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private user_service: UserService, private router: Router) { }\n  public user = new User();\n  public id: any;\n  ngOnInit() {\n  }\n  onSubmit() {\r\n    //console.log(this.user);\r\n    this.user_service.getUser(this.user.email_id, this.user.password)\r\n      .subscribe(\r\n      (result: CommonResponse) => {\r\n        this.id = result.id\r\n        console.log(this.id)\r\n        this.user_service.setuser(this.id);\r\n        this.router.navigate(['/Board', this.id])\r\n      },\r\n        error => {\r\n          alert(\"Incorrect check id or password\")\r\n          this.user = new User();\r\n        }\r\n      );\n  }\n}\n","module.exports = \"\\n.container {\\n    background-color: #EDEDED;\\n    width:500px;\\n}\\n\\r\\n\"","module.exports = \"<div style=\\\"width:auto\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h3>Register To Chat Application</h3><br>\\r\\n      <form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></span>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.user_name\\\" placeholder=\\\"Enter your Name\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-envelope\\\"></i></span>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email_id\\\" placeholder=\\\"Enter your Email_id\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-eye-open\\\"></i></span>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Enter Password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/home']\\\" style=\\\"position:relative;left:20px\\\">Cancel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../Services/UserService';\r\nimport { Router } from '@angular/router';\r\nimport { User, CommonResponse } from '../Models/Model';\r\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private user_service: UserService, private router: Router) { }\n  public user = new User();\n  public id: any;\n\n  ngOnInit() {\n  }\n  onSubmit() {\r\n    console.log(this.user);\n    this.user_service.register(this.user.user_name, this.user.email_id, this.user.password)\n      .subscribe(\r\n      (result: CommonResponse) => {\r\n        this.id = result.id\r\n        console.log(this.id)\r\n        this.router.navigate(['/Board', this.id])\r\n      },\r\n      error => {\r\n        alert(\"Id already exist. Plz user another id.\")\r\n        this.user = new User();\r\n      });\n    console.log(this.id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateGroupComponent } from './create-group/create-group.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GroupService } from './Services/GroupService';\r\nimport { GroupBoardComponent } from './group-board/group-board.component';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\nimport { FriendBoardComponent } from './friend-board/friend-board.component';\r\nimport { FriendService } from './Services/FriendService';\r\nimport { BillService } from './Services/BillService';\r\nimport { ExpenseComponent } from './expense/expense.component';\r\nimport { HubConnectionService } from './Services/HubService';\r\n\nconst appRoutes: Routes = [\n  {\n  path: 'Board/:id',\r\n  component: BoardComponent,\r\n    children: [\r\n      { path: 'expense', component: ExpenseComponent },\r\n    { path: '', component: DashboardComponent },\n    { path: 'dashboard', component: DashboardComponent },\n    { path: 'group/:gpid', component: GroupBoardComponent },\n    { path: 'friend/:frdid', component: FriendBoardComponent },\n    { path: 'newgroup', component: CreateGroupComponent },\n    {\n      path: 'account/setting',\n      component: UserSettingComponent\n    }\n  ],\r\n}];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  declarations: [\n    BoardComponent,\n    DashboardComponent,\n    UserSettingComponent,\n    FriendBoardComponent,\n    GroupBoardComponent,\n    ExpenseComponent,\n    CreateGroupComponent],\n  providers: [GroupService, FriendService, BillService, HubConnectionService],\n\n})\nexport class RoutingModuleModule { }\n","module.exports = \"\\n.container {\\n    background-color: #EDEDED;\\n    width:500px;\\n}\\n\\r\\n\"","module.exports = \"<div style=\\\"width:auto\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h2>Account Settings</h2><br>\\r\\n    <form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></span>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.user_name\\\" placeholder=\\\"Enter your Name\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-envelope\\\"></i></span>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email_id\\\" placeholder=\\\"Enter your Email_id\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-earphone\\\"></i></span>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone_no\\\" [(ngModel)]=\\\"user.phone_no\\\" placeholder=\\\"Enter your phone_no\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-eye-open\\\"></i></span>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Enter Password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/Board',userid]\\\" style=\\\"position:relative;left:20px\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from '../Models/Model';\r\nimport { UserService } from '../Services/UserService';\r\n\n@Component({\n  selector: 'app-user-setting',\n  templateUrl: './user-setting.component.html',\n  styleUrls: ['./user-setting.component.css']\n})\nexport class UserSettingComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private user_service: UserService) { }\n\n  userid: any;\n  public user = new User();\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\r\n      this.userid = params['id']\r\n    });\n  //  console.log(this.userid);\n    this.user_service.getUserData(this.userid)\n      .subscribe((data: User) => this.user = data);\n  }\n  onSubmit() {\n    this.user_service.updateUser(this.user).subscribe(\r\n      (data: User) => {\r\n        this.user = data\r\n      },\r\n      error =>\r\n        alert(\"operation failed\")\r\n    );\r\n\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}